"use strict"
define("dummy/a",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
e.default="dummy/a"}),define("dummy/adapters/-addon-docs",["exports","ember-cli-addon-docs/adapters/-addon-docs"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/adapters/class",["exports","ember-cli-addon-docs/adapters/class"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/adapters/component",["exports","ember-cli-addon-docs/adapters/component"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/adapters/module",["exports","ember-cli-addon-docs/adapters/module"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/adapters/project",["exports","ember-cli-addon-docs/adapters/project"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/app",["exports","dummy/resolver","ember-load-initializers","dummy/config/environment"],function(e,t,r,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var o=Ember.Application.extend({modulePrefix:n.default.modulePrefix,podModulePrefix:n.default.podModulePrefix,Resolver:t.default});(0,r.default)(o,n.default.modulePrefix)
var s=o
e.default=s}),define("dummy/b",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
e.default="dummy/b"}),define("dummy/breakpoints",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
e.default={mobile:"(max-width: 767px)",tablet:"(min-width: 768px) and (max-width: 991px)",desktop:"(min-width: 992px) and (max-width: 1200px)",jumbo:"(min-width: 1201px)"}}),define("dummy/components/-lf-get-outlet-state",["exports","liquid-fire/components/-lf-get-outlet-state"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/api/x-class",["exports","ember-cli-addon-docs/components/api/x-class/component"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/api/x-component",["exports","ember-cli-addon-docs/components/api/x-component/component"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/api/x-import-path",["exports","ember-cli-addon-docs/components/api/x-import-path/component"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/api/x-meta-panel",["exports","ember-cli-addon-docs/components/api/x-meta-panel/component"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/api/x-meta-panel/header",["exports","ember-cli-addon-docs/components/api/x-meta-panel/header/component"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/api/x-module",["exports","ember-cli-addon-docs/components/api/x-module/component"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/api/x-section",["exports","ember-cli-addon-docs/components/api/x-section/component"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/api/x-sections",["exports","ember-cli-addon-docs/components/api/x-sections/component"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/api/x-toggles",["exports","ember-cli-addon-docs/components/api/x-toggles/component"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/code-snippet",["exports","dummy/snippets"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var r=self.require("highlight.js"),n=Ember.Component.extend({tagName:"pre",classNameBindings:["language"],unindent:!0,_unindent:function(e){if(!this.get("unindent"))return e
for(var t,r,n=e.split("\n").filter(function(e){return""!==e}),o=0;o<n.length;o++)(t=/^[ \t]*/.exec(n[o]))&&(void 0===r||r>t[0].length)&&(r=t[0].length)
return void 0!==r&&r>0&&(e=e.replace(new RegExp("^[ \t]{"+r+"}","gm"),"")),e},source:Ember.computed("name",function(){var e=this.get("name").split("/").reduce(function(e,t){return e&&e[t]},t.default)
return this._unindent((e||"").replace(/^(\s*\n)*/,"").replace(/\s*$/,""))}),didInsertElement:function(){r.highlightBlock(this.get("element"))},language:Ember.computed("name",function(){var e=/\.(\w+)$/i.exec(this.get("name"))
if(e)switch(e[1].toLowerCase()){case"js":return"javascript"
case"coffee":return"coffeescript"
case"hbs":return"htmlbars"
case"css":return"css"
case"scss":return"scss"
case"less":return"less"
case"emblem":return"emblem"
case"ts":return"typescript"}})})
e.default=n}),define("dummy/components/copy-button",["exports","ember-cli-clipboard/components/copy-button"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/docs-demo",["exports","ember-cli-addon-docs/components/docs-demo/component"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/docs-demo/x-example",["exports","ember-cli-addon-docs/components/docs-demo/x-example/component"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/docs-demo/x-snippet",["exports","ember-cli-addon-docs/components/docs-demo/x-snippet/component"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/docs-header",["exports","ember-cli-addon-docs/components/docs-header/component"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/docs-header/link",["exports","ember-cli-addon-docs/components/docs-header/link/component"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/docs-header/search-box",["exports","ember-cli-addon-docs/components/docs-header/search-box/component"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/docs-header/search-result",["exports","ember-cli-addon-docs/components/docs-header/search-result/component"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/docs-header/search-results",["exports","ember-cli-addon-docs/components/docs-header/search-results/component"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/docs-header/version-selector",["exports","ember-cli-addon-docs/components/docs-header/version-selector/component"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})
define("dummy/components/docs-hero",["exports","ember-cli-addon-docs/components/docs-hero/component"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/docs-keyboard-shortcuts",["exports","ember-cli-addon-docs/components/docs-keyboard-shortcuts/component"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/docs-link",["exports","ember-cli-addon-docs/components/docs-link/component"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/docs-logo",["exports","ember-cli-addon-docs/components/docs-logo/component"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/docs-snippet",["exports","ember-cli-addon-docs/components/docs-snippet/component"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/docs-svg-icon",["exports","ember-cli-addon-docs/components/docs-svg-icon/component"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/docs-viewer",["exports","ember-cli-addon-docs/components/docs-viewer/component"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/docs-viewer/x-autogenerated-api-docs",["exports","ember-cli-addon-docs/components/docs-viewer/x-autogenerated-api-docs/component"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/docs-viewer/x-autogenerated-api-docs/module-nav",["exports","ember-cli-addon-docs/components/docs-viewer/x-autogenerated-api-docs/module-nav/component"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/docs-viewer/x-current-page-index",["exports","ember-cli-addon-docs/components/docs-viewer/x-current-page-index/component"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/docs-viewer/x-main",["exports","ember-cli-addon-docs/components/docs-viewer/x-main/component"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/docs-viewer/x-nav-item",["exports","ember-cli-addon-docs/components/docs-viewer/x-nav-item/component"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/docs-viewer/x-nav-list",["exports","ember-cli-addon-docs/components/docs-viewer/x-nav-list/component"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/docs-viewer/x-nav",["exports","ember-cli-addon-docs/components/docs-viewer/x-nav/component"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/docs-viewer/x-section",["exports","ember-cli-addon-docs/components/docs-viewer/x-section/component"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/ember-modal-dialog-positioned-container",["exports","ember-modal-dialog/components/positioned-container"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/ember-modal-dialog/-basic-dialog",["exports","ember-modal-dialog/components/basic-dialog"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/ember-modal-dialog/-in-place-dialog",["exports","ember-modal-dialog/components/in-place-dialog"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/ember-modal-dialog/-liquid-dialog",["exports","ember-modal-dialog/components/liquid-dialog"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/ember-modal-dialog/-liquid-tether-dialog",["exports","ember-modal-dialog/components/liquid-tether-dialog"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/ember-modal-dialog/-tether-dialog",["exports","ember-modal-dialog/components/tether-dialog"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/ember-tether",["exports","ember-tether/components/ember-tether"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/ember-wormhole",["exports","ember-wormhole/components/ember-wormhole"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/illiquid-model",["exports","liquid-fire/components/illiquid-model"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/js-importing-ts",["exports","dummy/lib/some-const"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var r=Ember.Component.extend({poke:Ember.computed.equal("ha",t.CHANGE)})
e.default=r}),define("dummy/components/liquid-bind",["exports","liquid-fire/components/liquid-bind"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/liquid-child",["exports","liquid-fire/components/liquid-child"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/liquid-container",["exports","liquid-fire/components/liquid-container"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/liquid-if",["exports","liquid-fire/components/liquid-if"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/liquid-measured",["exports","liquid-fire/components/liquid-measured"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"measure",{enumerable:!0,get:function(){return t.measure}})})
define("dummy/components/liquid-outlet",["exports","liquid-fire/components/liquid-outlet"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/liquid-spacer",["exports","liquid-fire/components/liquid-spacer"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/liquid-sync",["exports","liquid-fire/components/liquid-sync"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/liquid-unless",["exports","liquid-fire/components/liquid-unless"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/liquid-versions",["exports","liquid-fire/components/liquid-versions"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/modal-dialog",["exports","ember-cli-addon-docs/components/modal-dialog/component"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/test-one",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.Component.extend({someValue:"from component"})
e.default=t}),define("dummy/components/ts-component",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.Component.extend({someValue:"from component"})
e.default=t}),define("dummy/controllers/application",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.Controller.extend({value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"Test"
return"".concat(e," ","Value")}(),foo:"hello"})
e.default=t}),define("dummy/controllers/docs/api/class",["exports","ember-cli-addon-docs/controllers/docs/api/class"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/helpers/and",["exports","ember-truth-helpers/helpers/and"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"and",{enumerable:!0,get:function(){return t.and}})}),define("dummy/helpers/app-version",["exports","dummy/config/environment","ember-cli-app-version/utils/regexp"],function(e,t,r){function n(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},o=t.default.APP.version,s=n.versionOnly||n.hideSha,a=n.shaOnly||n.hideVersion,i=null
return s&&(n.showExtended&&(i=o.match(r.versionExtendedRegExp)),i||(i=o.match(r.versionRegExp))),a&&(i=o.match(r.shaRegExp)),i?i[0]:o}Object.defineProperty(e,"__esModule",{value:!0}),e.appVersion=n,e.default=void 0
var o=Ember.Helper.helper(n)
e.default=o}),define("dummy/helpers/append",["exports","ember-composable-helpers/helpers/append"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"append",{enumerable:!0,get:function(){return t.append}})}),define("dummy/helpers/array",["exports","ember-composable-helpers/helpers/array"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"array",{enumerable:!0,get:function(){return t.array}})}),define("dummy/helpers/break-on",["exports","ember-cli-addon-docs/helpers/break-on"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/helpers/camelize",["exports","ember-cli-string-helpers/helpers/camelize"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"camelize",{enumerable:!0,get:function(){return t.camelize}})}),define("dummy/helpers/cancel-all",["exports","ember-concurrency/helpers/cancel-all"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/helpers/capitalize",["exports","ember-cli-string-helpers/helpers/capitalize"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"capitalize",{enumerable:!0,get:function(){return t.capitalize}})}),define("dummy/helpers/chunk",["exports","ember-composable-helpers/helpers/chunk"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"chunk",{enumerable:!0,get:function(){return t.chunk}})}),define("dummy/helpers/classify",["exports","ember-cli-string-helpers/helpers/classify"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"classify",{enumerable:!0,get:function(){return t.classify}})}),define("dummy/helpers/compact",["exports","ember-composable-helpers/helpers/compact"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/helpers/compute",["exports","ember-composable-helpers/helpers/compute"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"compute",{enumerable:!0,get:function(){return t.compute}})}),define("dummy/helpers/contains",["exports","ember-composable-helpers/helpers/contains"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"contains",{enumerable:!0,get:function(){return t.contains}})}),define("dummy/helpers/dasherize",["exports","ember-cli-string-helpers/helpers/dasherize"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"dasherize",{enumerable:!0,get:function(){return t.dasherize}})}),define("dummy/helpers/dec",["exports","ember-composable-helpers/helpers/dec"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"dec",{enumerable:!0,get:function(){return t.dec}})}),define("dummy/helpers/drop",["exports","ember-composable-helpers/helpers/drop"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/helpers/eq",["exports","ember-truth-helpers/helpers/equal"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"equal",{enumerable:!0,get:function(){return t.equal}})}),define("dummy/helpers/filter-by",["exports","ember-composable-helpers/helpers/filter-by"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/helpers/filter",["exports","ember-composable-helpers/helpers/filter"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/helpers/find-by",["exports","ember-composable-helpers/helpers/find-by"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})
define("dummy/helpers/flatten",["exports","ember-composable-helpers/helpers/flatten"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"flatten",{enumerable:!0,get:function(){return t.flatten}})}),define("dummy/helpers/group-by",["exports","ember-composable-helpers/helpers/group-by"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/helpers/gt",["exports","ember-truth-helpers/helpers/gt"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"gt",{enumerable:!0,get:function(){return t.gt}})}),define("dummy/helpers/gte",["exports","ember-truth-helpers/helpers/gte"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"gte",{enumerable:!0,get:function(){return t.gte}})}),define("dummy/helpers/has-next",["exports","ember-composable-helpers/helpers/has-next"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"hasNext",{enumerable:!0,get:function(){return t.hasNext}})}),define("dummy/helpers/has-previous",["exports","ember-composable-helpers/helpers/has-previous"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"hasPrevious",{enumerable:!0,get:function(){return t.hasPrevious}})}),define("dummy/helpers/href-to",["exports","ember-href-to/helpers/href-to"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"hrefTo",{enumerable:!0,get:function(){return t.hrefTo}})}),define("dummy/helpers/html-safe",["exports","ember-cli-string-helpers/helpers/html-safe"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"htmlSafe",{enumerable:!0,get:function(){return t.htmlSafe}})}),define("dummy/helpers/humanize",["exports","ember-cli-string-helpers/helpers/humanize"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"humanize",{enumerable:!0,get:function(){return t.humanize}})}),define("dummy/helpers/ignore-children",["exports","ember-ignore-children-helper/helpers/ignore-children"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"ignoreChildren",{enumerable:!0,get:function(){return t.ignoreChildren}})}),define("dummy/helpers/inc",["exports","ember-composable-helpers/helpers/inc"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"inc",{enumerable:!0,get:function(){return t.inc}})}),define("dummy/helpers/intersect",["exports","ember-composable-helpers/helpers/intersect"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/helpers/invoke",["exports","ember-composable-helpers/helpers/invoke"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"invoke",{enumerable:!0,get:function(){return t.invoke}})}),define("dummy/helpers/is-array",["exports","ember-truth-helpers/helpers/is-array"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"isArray",{enumerable:!0,get:function(){return t.isArray}})}),define("dummy/helpers/is-clipboard-supported",["exports","ember-cli-clipboard/helpers/is-clipboard-supported"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"isClipboardSupported",{enumerable:!0,get:function(){return t.isClipboardSupported}})}),define("dummy/helpers/is-empty",["exports","ember-truth-helpers/helpers/is-empty"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/helpers/is-equal",["exports","ember-truth-helpers/helpers/is-equal"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"isEqual",{enumerable:!0,get:function(){return t.isEqual}})}),define("dummy/helpers/join",["exports","ember-composable-helpers/helpers/join"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/helpers/js-help",["exports"],function(e){function t(){return"js please help me"}Object.defineProperty(e,"__esModule",{value:!0}),e.jsHelp=t,e.default=void 0
var r=Ember.Helper.helper(t)
e.default=r}),define("dummy/helpers/lf-lock-model",["exports","liquid-fire/helpers/lf-lock-model"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"lfLockModel",{enumerable:!0,get:function(){return t.lfLockModel}})}),define("dummy/helpers/lf-or",["exports","liquid-fire/helpers/lf-or"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"lfOr",{enumerable:!0,get:function(){return t.lfOr}})}),define("dummy/helpers/lowercase",["exports","ember-cli-string-helpers/helpers/lowercase"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"lowercase",{enumerable:!0,get:function(){return t.lowercase}})}),define("dummy/helpers/lt",["exports","ember-truth-helpers/helpers/lt"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"lt",{enumerable:!0,get:function(){return t.lt}})}),define("dummy/helpers/lte",["exports","ember-truth-helpers/helpers/lte"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"lte",{enumerable:!0,get:function(){return t.lte}})}),define("dummy/helpers/map-by",["exports","ember-composable-helpers/helpers/map-by"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/helpers/map",["exports","ember-composable-helpers/helpers/map"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/helpers/media",["exports","ember-responsive/helpers/media"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"media",{enumerable:!0,get:function(){return t.media}})}),define("dummy/helpers/next",["exports","ember-composable-helpers/helpers/next"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"next",{enumerable:!0,get:function(){return t.next}})}),define("dummy/helpers/noop",["exports","ember-composable-helpers/helpers/noop"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"noop",{enumerable:!0,get:function(){return t.noop}})}),define("dummy/helpers/not-eq",["exports","ember-truth-helpers/helpers/not-equal"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"notEq",{enumerable:!0,get:function(){return t.notEq}})})
define("dummy/helpers/not",["exports","ember-truth-helpers/helpers/not"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"not",{enumerable:!0,get:function(){return t.not}})}),define("dummy/helpers/object-at",["exports","ember-composable-helpers/helpers/object-at"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"objectAt",{enumerable:!0,get:function(){return t.objectAt}})}),define("dummy/helpers/optional",["exports","ember-composable-helpers/helpers/optional"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"optional",{enumerable:!0,get:function(){return t.optional}})}),define("dummy/helpers/or",["exports","ember-truth-helpers/helpers/or"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"or",{enumerable:!0,get:function(){return t.or}})}),define("dummy/helpers/perform",["exports","ember-concurrency/helpers/perform"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/helpers/pipe-action",["exports","ember-composable-helpers/helpers/pipe-action"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/helpers/pipe",["exports","ember-composable-helpers/helpers/pipe"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"pipe",{enumerable:!0,get:function(){return t.pipe}})}),define("dummy/helpers/pluralize",["exports","ember-inflector/lib/helpers/pluralize"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var r=t.default
e.default=r}),define("dummy/helpers/previous",["exports","ember-composable-helpers/helpers/previous"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"previous",{enumerable:!0,get:function(){return t.previous}})}),define("dummy/helpers/queue",["exports","ember-composable-helpers/helpers/queue"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"queue",{enumerable:!0,get:function(){return t.queue}})}),define("dummy/helpers/range",["exports","ember-composable-helpers/helpers/range"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"range",{enumerable:!0,get:function(){return t.range}})}),define("dummy/helpers/reduce",["exports","ember-composable-helpers/helpers/reduce"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/helpers/reject-by",["exports","ember-composable-helpers/helpers/reject-by"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/helpers/repeat",["exports","ember-composable-helpers/helpers/repeat"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"repeat",{enumerable:!0,get:function(){return t.repeat}})}),define("dummy/helpers/reverse",["exports","ember-composable-helpers/helpers/reverse"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/helpers/shuffle",["exports","ember-composable-helpers/helpers/shuffle"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"shuffle",{enumerable:!0,get:function(){return t.shuffle}})}),define("dummy/helpers/singularize",["exports","ember-inflector/lib/helpers/singularize"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var r=t.default
e.default=r}),define("dummy/helpers/slice",["exports","ember-composable-helpers/helpers/slice"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/helpers/sort-by",["exports","ember-composable-helpers/helpers/sort-by"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/helpers/svg-jar",["exports","ember-svg-jar/utils/make-helper","ember-svg-jar/utils/make-svg"],function(e,t,r){function n(e){try{return require("ember-svg-jar/inlined/".concat(e)).default}catch(t){return null}}function o(e,t){return(0,r.default)(e,t,n)}Object.defineProperty(e,"__esModule",{value:!0}),e.svgJar=o,e.default=void 0
var s=(0,t.default)(o)
e.default=s}),define("dummy/helpers/take",["exports","ember-composable-helpers/helpers/take"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/helpers/task",["exports","ember-concurrency/helpers/task"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/helpers/titleize",["exports","ember-cli-string-helpers/helpers/titleize"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"titleize",{enumerable:!0,get:function(){return t.titleize}})}),define("dummy/helpers/toggle-action",["exports","ember-composable-helpers/helpers/toggle-action"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/helpers/toggle",["exports","ember-composable-helpers/helpers/toggle"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"toggle",{enumerable:!0,get:function(){return t.toggle}})}),define("dummy/helpers/trim",["exports","ember-cli-string-helpers/helpers/trim"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"trim",{enumerable:!0,get:function(){return t.trim}})}),define("dummy/helpers/truncate",["exports","ember-cli-string-helpers/helpers/truncate"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"truncate",{enumerable:!0,get:function(){return t.truncate}})}),define("dummy/helpers/type-signature",["exports","ember-cli-addon-docs/helpers/type-signature"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/helpers/typed-help",["exports"],function(e){function t(){return"my type of help"}Object.defineProperty(e,"__esModule",{value:!0}),e.typedHelp=t,e.default=void 0
var r=Ember.Helper.helper(t)
e.default=r}),define("dummy/helpers/underscore",["exports","ember-cli-string-helpers/helpers/underscore"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"underscore",{enumerable:!0,get:function(){return t.underscore}})})
define("dummy/helpers/union",["exports","ember-composable-helpers/helpers/union"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/helpers/uppercase",["exports","ember-cli-string-helpers/helpers/uppercase"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"uppercase",{enumerable:!0,get:function(){return t.uppercase}})}),define("dummy/helpers/w",["exports","ember-cli-string-helpers/helpers/w"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"w",{enumerable:!0,get:function(){return t.w}})}),define("dummy/helpers/without",["exports","ember-composable-helpers/helpers/without"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"without",{enumerable:!0,get:function(){return t.without}})}),define("dummy/helpers/xor",["exports","ember-truth-helpers/helpers/xor"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"xor",{enumerable:!0,get:function(){return t.xor}})}),define("dummy/initializers/add-modals-container",["exports","ember-modal-dialog/initializers/add-modals-container"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var r={name:"add-modals-container",initialize:t.default}
e.default=r}),define("dummy/initializers/app-version",["exports","ember-cli-app-version/initializer-factory","dummy/config/environment"],function(e,t,r){var n,o
Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0,r.default.APP&&(n=r.default.APP.name,o=r.default.APP.version)
var s={name:"App Version",initialize:(0,t.default)(n,o)}
e.default=s}),define("dummy/initializers/component-styles",["exports","ember-component-css/initializers/component-styles","dummy/mixins/style-namespacing-extras"],function(e,t,r){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"initialize",{enumerable:!0,get:function(){return t.initialize}}),Ember.Component.reopen(r.default)}),define("dummy/initializers/container-debug-adapter",["exports","ember-resolver/resolvers/classic/container-debug-adapter"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var r={name:"container-debug-adapter",initialize:function(){var e=arguments[1]||arguments[0]
e.register("container-debug-adapter:main",t.default),e.inject("container-debug-adapter:main","namespace","application:main")}}
e.default=r}),define("dummy/initializers/ember-concurrency",["exports","ember-concurrency/initializers/ember-concurrency"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/initializers/ember-data",["exports","ember-data/setup-container","ember-data"],function(e,t,r){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var n={name:"ember-data",initialize:t.default}
e.default=n}),define("dummy/initializers/ember-keyboard-first-responder-inputs",["exports","ember-keyboard/initializers/ember-keyboard-first-responder-inputs"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"initialize",{enumerable:!0,get:function(){return t.initialize}})}),define("dummy/initializers/ember-responsive-breakpoints",["exports","ember-responsive/initializers/responsive"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var r=t.default
e.default=r}),define("dummy/initializers/export-application-global",["exports","dummy/config/environment"],function(e,t){function r(){var e=arguments[1]||arguments[0]
if(!1!==t.default.exportApplicationGlobal){var r
if("undefined"!=typeof window)r=window
else if("undefined"!=typeof global)r=global
else{if("undefined"==typeof self)return
r=self}var n,o=t.default.exportApplicationGlobal
n="string"==typeof o?o:Ember.String.classify(t.default.modulePrefix),r[n]||(r[n]=e,e.reopen({willDestroy:function(){this._super.apply(this,arguments),delete r[n]}}))}}Object.defineProperty(e,"__esModule",{value:!0}),e.initialize=r,e.default=void 0
var n={name:"export-application-global",initialize:r}
e.default=n}),define("dummy/initializers/inject-media",["exports","ember-cli-addon-docs/initializers/inject-media"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"initialize",{enumerable:!0,get:function(){return t.initialize}})}),define("dummy/initializers/liquid-fire",["exports","liquid-fire/velocity-ext"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
e.default={name:"liquid-fire",initialize:function(){}}}),define("dummy/initializers/route-anchor-jump",["exports","ember-cli-addon-docs/initializers/route-anchor-jump"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"initialize",{enumerable:!0,get:function(){return t.initialize}})}),define("dummy/instance-initializers/ember-data",["exports","ember-data/initialize-store-service"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var r={name:"ember-data",initialize:t.default}
e.default=r}),define("dummy/instance-initializers/ember-href-to",["exports","ember-href-to/href-to"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var r={name:"ember-href-to",initialize:function(e){if("undefined"==typeof FastBoot){var r=function(r){var n="A"===r.target.tagName?r.target:function(e){if(e.closest)return e.closest("a")
for(e=e.parentElement;e&&"A"!==e.tagName;)e=e.parentElement
return e}(r.target)
n&&new t.default(e,r,n).maybeHandle()}
document.body.addEventListener("click",r),e.reopen({willDestroy:function(){return document.body.removeEventListener("click",r),this._super.apply(this,arguments)}})}}}
e.default=r}),define("dummy/instance-initializers/route-styles",["exports","ember-component-css/instance-initializers/route-styles"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"initialize",{enumerable:!0,get:function(){return t.initialize}})}),define("dummy/lib/some-const",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.CHANGE=e.SPEED_OF_LIGHT=void 0
e.SPEED_OF_LIGHT=299792458
e.CHANGE=!0}),define("dummy/locations/router-scroll",["exports","ember-router-scroll/locations/router-scroll"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/mixins/style-namespacing-extras",["exports","ember-component-css/mixins/style-namespacing-extras"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/models/class",["exports","ember-cli-addon-docs/models/class"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/models/component",["exports","ember-cli-addon-docs/models/component"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/models/module",["exports","ember-cli-addon-docs/models/module"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/models/project",["exports","ember-cli-addon-docs/models/project"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/resolver",["exports","ember-resolver"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var r=t.default
e.default=r}),define("dummy/router",["exports","ember-cli-addon-docs/router","dummy/config/environment"],function(e,t,r){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var n=t.default.extend({location:r.default.locationType,rootURL:r.default.rootURL})
n.map(function(){(0,t.docsRoute)(this,function(){this.route("upgrade-notes"),this.route("configuration"),this.route("ts-guide",function(){this.route("with-addons"),this.route("using-ts-effectively"),this.route("current-limitations")}),this.route("troubleshooting",function(){this.route("conflicting-types")}),this.route("type-defs",function(){this.route("package-names")})})})
var o=n
e.default=o}),define("dummy/routes/docs",["exports","ember-cli-addon-docs/routes/docs"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})
define("dummy/routes/docs/api/item",["exports","ember-cli-addon-docs/routes/docs/api/item"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/serializers/-addon-docs",["exports","ember-cli-addon-docs/serializers/-addon-docs"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/services/adapter",["exports","ember-fetch-adapter"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/services/docs-fetch",["exports","ember-cli-addon-docs/services/docs-fetch"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/services/docs-routes",["exports","ember-cli-addon-docs/services/docs-routes"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/services/docs-search",["exports","ember-cli-addon-docs/services/docs-search"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/services/keyboard",["exports","ember-keyboard/services/keyboard"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/services/liquid-fire-transitions",["exports","liquid-fire/transition-map"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var r=t.default
e.default=r}),define("dummy/services/media",["exports","ember-responsive/services/media"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var r=t.default
e.default=r}),define("dummy/services/modal-dialog",["exports","dummy/config/environment"],function(e,t){function r(e){return Ember.computed(function(){return t.default["ember-modal-dialog"]&&t.default["ember-modal-dialog"][e]})}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var n=Ember.Service.extend({hasEmberTether:r("hasEmberTether"),hasLiquidWormhole:r("hasLiquidWormhole"),hasLiquidTether:r("hasLiquidTether"),destinationElementId:null})
e.default=n}),define("dummy/services/project-version",["exports","ember-cli-addon-docs/services/project-version"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/services/router-scroll",["exports","ember-router-scroll/services/router-scroll"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/shadowed-file",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
e.default="dummy/shadowed-file"}),define("dummy/snippets",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
e.default={"my-addon.d.ts":"declare module '*/template' {\n  import { TemplateFactory } from 'htmlbars-inline-precompile';\n\n  const template: TemplateFactory;\n  export default template;\n}\n\ndeclare module 'app/templates/*' {\n  import { TemplateFactory } from 'htmlbars-inline-precompile';\n\n  const template: TemplateFactory;\n  export default template;\n}\n\ndeclare module 'addon/templates/*' {\n  import { TemplateFactory } from 'htmlbars-inline-precompile';\n\n  const template: TemplateFactory;\n  export default template;\n}","my-game.hbs":"<button onclick={{action 'turnWheel' 'NOT-A-NUMBER'}}>Click Me</button>","my-game.ts":"import Component from '@ember/component';\nimport { action } from '@ember-decorators/object';\n\nexport default class MyGame extends Component {\n  @action\n  turnWheel(degrees: number) {\n    // ...\n  }\n}","nested-component.ts":"// TypeScript compiler won't detect this type mismatch\nthis.send('turnWheel', 'ALSO-NOT-A-NUMBER');"}}),define("dummy/templates/application",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"ZmGIHkZS",block:'{"symbols":[],"statements":[[1,[22,"outlet"],false],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"dummy/templates/application.hbs"}})
e.default=t}),define("dummy/templates/components/code-snippet",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"zGuD2Kx3",block:'{"symbols":[],"statements":[[1,[22,"source"],false],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"dummy/templates/components/code-snippet.hbs"}})
e.default=t}),define("dummy/templates/components/index-content",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"+A4/pK6D",block:'{"symbols":[],"statements":[[7,"div",true],[10,"class","docs-md"],[8],[7,"h2",true],[10,"id","why-typescript-"],[10,"class","docs-md__h2"],[8],[7,"a",true],[10,"href","#why-typescript-"],[10,"class","heading-anchor"],[8],[0,"Why TypeScript?"],[9],[9],[0,"\\n    "],[7,"aside",true],[8],[0,"Just want to dive in? "],[1,[28,"docs-link",[[28,"html-safe",["Click here &rarr;"],null],"docs.index"],null],false],[9],[0,"\\n\\n"],[7,"p",true],[8],[0,"What is TypeScript, and why should you adopt it?"],[9],[0,"\\n"],[7,"blockquote",true],[10,"class","docs-md__blockquote"],[8],[7,"p",true],[8],[0,"TypeScript is a typed superset of JavaScript that compiles to plain JavaScript."],[7,"br",true],[8],[9],[0,"—"],[7,"a",true],[10,"href","http://www.typescriptlang.org"],[10,"class","docs-md__a"],[8],[0,"typescriptlang.org"],[9],[9],[0,"\\n"],[9],[7,"p",true],[8],[0,"TypeScript lets you build "],[7,"em",true],[8],[0,"ambitious web applications"],[9],[0," with confidence—so it’s a perfect fit for Ember apps!"],[9],[0,"\\n"],[7,"ul",true],[8],[0,"\\n"],[7,"li",true],[8],[0,"Get rid of "],[7,"code",true],[8],[0,"undefined is not a function"],[9],[0," and "],[7,"code",true],[8],[0,"null is not an object"],[9],[0," once and for all."],[9],[0,"\\n"],[7,"li",true],[8],[0,"Enjoy API docs… that are always up-to-date."],[9],[0,"\\n"],[7,"li",true],[8],[0,"Experience better developer productivity through top-notch editor support, including incredible autocomplete, guided refactorings, automatic imports, and more."],[9],[0,"\\n"],[9],[9]],"hasEval":false}',meta:{moduleName:"dummy/templates/components/index-content.hbs"}})
e.default=t}),define("dummy/templates/components/js-importing-ts",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"a9ggh+Uz",block:'{"symbols":[],"statements":[[7,"div",true],[10,"style","border: 2px solid black;width: 100%; background-color: azure; margin-top: 20px; padding: 0 0 20px 20px"],[8],[0,"\\n"],[7,"p",true],[10,"style","margin-top: 0px; border-bottom: chocolate 1px solid"],[8],[0,"js-importing-ts.hbs"],[9],[0,"\\n"],[1,[22,"poke"],false],[0,"\\n"],[7,"p",true],[8],[0,"Ts helper: "],[1,[22,"typed-help"],false],[9],[0,"\\n"],[7,"p",true],[8],[0,"Js helper: "],[1,[22,"js-help"],false],[9],[0,"\\n"],[9],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"dummy/templates/components/js-importing-ts.hbs"}})
e.default=t}),define("dummy/templates/components/ts-component",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"Kr+fGgBX",block:'{"symbols":[],"statements":[[7,"div",true],[10,"style","border: 2px solid black;width: 100%; background-color: azure; margin-top: 20px; padding: 0 0 20px 20px"],[8],[0,"\\n"],[7,"p",true],[10,"style","margin-top: 0px; border-bottom: chocolate 1px solid"],[8],[0,"ts-component.hbs"],[9],[0,"\\n"],[4,"if",[[24,["someValue"]]],null,{"statements":[[0,"    Component defines "],[7,"b",true],[8],[0,"someValue"],[9],[0," property as: "],[1,[22,"someValue"],false],[0,"\\n"]],"parameters":[]},{"statements":[[0,"    "],[7,"span",true],[10,"style","color:red"],[8],[0,"Missing "],[7,"b",true],[8],[0,"someValue"],[9],[0," property, expected to be defined by the component."],[9],[0,"\\n"]],"parameters":[]}],[0,"\\n"],[7,"p",true],[8],[0,"Ts helper: "],[1,[22,"typed-help"],false],[9],[0,"\\n"],[7,"p",true],[8],[0,"Js helper: "],[1,[22,"js-help"],false],[9],[0,"\\n"],[9],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"dummy/templates/components/ts-component.hbs"}})
e.default=t}),define("dummy/templates/docs",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"AeU0Sikk",block:'{"symbols":["viewer","nav"],"statements":[[5,"docs-header",[],[["@prefix","@name"],["Ember CLI","TypeScript"]]],[0,"\\n\\n"],[4,"docs-viewer",null,null,{"statements":[[0,"  "],[6,[23,1,["nav"]],[],[[],[]],{"statements":[[0,"\\n    "],[1,[28,"component",[[28,"-assert-implicit-component-helper-argument",[[23,2,["section"]],"expected `nav.section` to be a contextual component but found a string. Did you mean `(component nav.section)`? (\'dummy/templates/docs.hbs\' @ L5:C6) "],null],"Introduction"],null],false],[0,"\\n    "],[1,[28,"component",[[28,"-assert-implicit-component-helper-argument",[[23,2,["item"]],"expected `nav.item` to be a contextual component but found a string. Did you mean `(component nav.item)`? (\'dummy/templates/docs.hbs\' @ L6:C6) "],null],"Installation","docs.index"],null],false],[0,"\\n    "],[1,[28,"component",[[28,"-assert-implicit-component-helper-argument",[[23,2,["item"]],"expected `nav.item` to be a contextual component but found a string. Did you mean `(component nav.item)`? (\'dummy/templates/docs.hbs\' @ L7:C6) "],null],"Upgrading from 1.x","docs.upgrade-notes"],null],false],[0,"\\n    "],[1,[28,"component",[[28,"-assert-implicit-component-helper-argument",[[23,2,["item"]],"expected `nav.item` to be a contextual component but found a string. Did you mean `(component nav.item)`? (\'dummy/templates/docs.hbs\' @ L8:C6) "],null],"Configuration","docs.configuration"],null],false],[0,"\\n\\n    "],[1,[28,"component",[[28,"-assert-implicit-component-helper-argument",[[23,2,["section"]],"expected `nav.section` to be a contextual component but found a string. Did you mean `(component nav.section)`? (\'dummy/templates/docs.hbs\' @ L10:C6) "],null],"Using TypeScript with Ember"],null],false],[0,"\\n    "],[1,[28,"component",[[28,"-assert-implicit-component-helper-argument",[[23,2,["item"]],"expected `nav.item` to be a contextual component but found a string. Did you mean `(component nav.item)`? (\'dummy/templates/docs.hbs\' @ L11:C6) "],null],"Using TypeScript Effectively","docs.ts-guide.using-ts-effectively"],null],false],[0,"\\n    "],[1,[28,"component",[[28,"-assert-implicit-component-helper-argument",[[23,2,["item"]],"expected `nav.item` to be a contextual component but found a string. Did you mean `(component nav.item)`? (\'dummy/templates/docs.hbs\' @ L12:C6) "],null],"Building Addons in TypeScript","docs.ts-guide.with-addons"],null],false],[0,"\\n    "],[1,[28,"component",[[28,"-assert-implicit-component-helper-argument",[[23,2,["item"]],"expected `nav.item` to be a contextual component but found a string. Did you mean `(component nav.item)`? (\'dummy/templates/docs.hbs\' @ L13:C6) "],null],"Current Limitations","docs.ts-guide.current-limitations"],null],false],[0,"\\n\\n    "],[1,[28,"component",[[28,"-assert-implicit-component-helper-argument",[[23,2,["section"]],"expected `nav.section` to be a contextual component but found a string. Did you mean `(component nav.section)`? (\'dummy/templates/docs.hbs\' @ L15:C6) "],null],"Working With Type Definition Files"],null],false],[0,"\\n    "],[1,[28,"component",[[28,"-assert-implicit-component-helper-argument",[[23,2,["item"]],"expected `nav.item` to be a contextual component but found a string. Did you mean `(component nav.item)`? (\'dummy/templates/docs.hbs\' @ L16:C6) "],null],"Understanding the Package Names","docs.type-defs.package-names"],null],false],[0,"\\n\\n    "],[1,[28,"component",[[28,"-assert-implicit-component-helper-argument",[[23,2,["section"]],"expected `nav.section` to be a contextual component but found a string. Did you mean `(component nav.section)`? (\'dummy/templates/docs.hbs\' @ L18:C6) "],null],"Troubleshooting"],null],false],[0,"\\n    "],[1,[28,"component",[[28,"-assert-implicit-component-helper-argument",[[23,2,["item"]],"expected `nav.item` to be a contextual component but found a string. Did you mean `(component nav.item)`? (\'dummy/templates/docs.hbs\' @ L19:C6) "],null],"Conflicting Type Dependencies","docs.troubleshooting.conflicting-types"],null],false],[0,"\\n  "]],"parameters":[2]}],[0,"\\n\\n  "],[6,[23,1,["main"]],[],[[],[]],{"statements":[[0,"\\n    "],[1,[22,"outlet"],false],[0,"\\n  "]],"parameters":[]}],[0,"\\n"]],"parameters":[1]},null]],"hasEval":false}',meta:{moduleName:"dummy/templates/docs.hbs"}})
e.default=t}),define("dummy/templates/docs/api/item",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"/a54ola1",block:'{"symbols":[],"statements":[[4,"if",[[24,["model","isComponent"]]],null,{"statements":[[0,"  "],[1,[28,"api/x-component",null,[["component"],[[24,["model"]]]]],false],[0,"\\n"]],"parameters":[]},{"statements":[[4,"if",[[24,["model","isClass"]]],null,{"statements":[[0,"  "],[1,[28,"api/x-class",null,[["class"],[[24,["model"]]]]],false],[0,"\\n"]],"parameters":[]},{"statements":[[0,"  "],[1,[28,"api/x-module",null,[["module"],[[24,["model"]]]]],false],[0,"\\n"]],"parameters":[]}]],"parameters":[]}]],"hasEval":false}',meta:{moduleName:"dummy/templates/docs/api/item.hbs"}})
e.default=t}),define("dummy/templates/docs/configuration",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"xds5sJFX",block:'{"symbols":[],"statements":[[7,"div",true],[10,"class","docs-md"],[8],[7,"h1",true],[10,"id","configuring-ember-cli-typescript"],[10,"class","docs-md__h1"],[8],[0,"Configuring ember-cli-typescript"],[9],[0,"\\n    \\n      "],[7,"h2",true],[10,"id","blueprints"],[10,"class","docs-md__h2"],[8],[7,"a",true],[10,"href","#blueprints"],[10,"class","heading-anchor"],[8],[0,"Blueprints"],[9],[9],[0,"\\n    "],[7,"p",true],[8],[0,"By default, ember-cli-typescript installs the "],[7,"a",true],[10,"href","https://github.com/typed-ember/ember-cli-typescript-blueprints"],[10,"class","docs-md__a"],[8],[0,"ember-cli-typescript-blueprints"],[9],[0," package so that you can use Ember\'s generators like normal, but with all the special sauce you need for things to work nicely throughout your system with TypeScript."],[9],[0,"\\n"],[7,"p",true],[8],[0,"If you want to stick with the normal JavaScript blueprints—say, because your team isn\'t ready to dive into the deep end with making "],[7,"em",true],[8],[0,"everything"],[9],[0," TypeScript yet—you can simply uninstall the blueprints package."],[9],[0,"\\n"],[7,"p",true],[8],[0,"With yarn:"],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedsh"],[8],[0,"yarn remove ember-cli-typescript-blueprints"],[9],[9],[0,"\\n"],[7,"p",true],[8],[0,"With npm:"],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedsh"],[8],[0,"npm uninstall ember-cli-typescript-blueprints"],[9],[9],[0,"\\n\\n      "],[7,"h2",true],[10,"id","tsconfig-json"],[10,"class","docs-md__h2"],[8],[7,"a",true],[10,"href","#tsconfig-json"],[10,"class","heading-anchor"],[8],[7,"code",true],[8],[0,"tsconfig.json"],[9],[9],[9],[0,"\\n    "],[7,"p",true],[8],[0,"We generate a good default "],[7,"a",true],[10,"href","https://github.com/typed-ember/ember-cli-typescript/blob/master/blueprints/ember-cli-typescript/files/tsconfig.json"],[10,"class","docs-md__a"],[8],[7,"code",true],[8],[0,"tsconfig.json"],[9],[9],[0,", which will usually make everything "],[7,"em",true],[8],[0,"Just Work™"],[9],[0,". In general, you may customize your TypeScript build process as usual using the "],[7,"code",true],[8],[0,"tsconfig.json"],[9],[0," file."],[9],[0,"\\n"],[7,"p",true],[8],[0,"However, there are a few things worth noting if you\'re already familiar with TypeScript and looking to make further or more advanced customizations (but "],[7,"em",true],[8],[0,"most"],[9],[0," users can just ignore this section!):"],[9],[0,"\\n"],[7,"ol",true],[8],[0,"\\n"],[7,"li",true],[8],[7,"p",true],[8],[0,"The generated tsconfig file does not set "],[7,"code",true],[8],[0,"\\"outDir\\""],[9],[0," and sets "],[7,"code",true],[8],[0,"\\"noEmit\\""],[9],[0," to "],[7,"code",true],[8],[0,"true"],[9],[0,". The default configuration we generate allows you to run editors which use the compiler without creating extraneous "],[7,"code",true],[8],[0,".js"],[9],[0," files throughout your codebase, leaving the compilation to ember-cli-typescript to manage."],[9],[0,"\\n"],[7,"p",true],[8],[0,"You "],[7,"em",true],[8],[0,"can"],[9],[0," still customize those properties in "],[7,"code",true],[8],[0,"tsconfig.json"],[9],[0," if your use case requires it, however. For example, to see the output of the compilation in a separate folder you are welcome to set "],[7,"code",true],[8],[0,"\\"outDir\\""],[9],[0," to some path and set "],[7,"code",true],[8],[0,"\\"noEmit\\""],[9],[0," to "],[7,"code",true],[8],[0,"false"],[9],[0,". Then tools which use the TypeScript compiler (e.g. the watcher tooling in JetBrains IDEs) will generate files at that location, while the Ember.js/"],[7,"a",true],[10,"href","http://broccolijs.com/"],[10,"class","docs-md__a"],[8],[0,"Broccoli"],[9],[0," pipeline will continue to use its own temp folder."],[9],[0,"\\n"],[9],[0,"\\n"],[7,"li",true],[8],[7,"p",true],[8],[0,"Closely related to the previous point: any changes you do make to "],[7,"code",true],[8],[0,"outDir"],[9],[0," won\'t have any effect on how "],[7,"em",true],[8],[0,"Ember"],[9],[0," builds your application—we run the entire build pipeline through Babel\'s TypeScript support instead of through the TypeScript compiler."],[9],[0,"\\n"],[9],[0,"\\n"],[7,"li",true],[8],[7,"p",true],[8],[0,"Since your application is built by Babel, and only "],[7,"em",true],[8],[0,"type-checked"],[9],[0," by TypeScript, we set the "],[7,"code",true],[8],[0,"target"],[9],[0," key in "],[7,"code",true],[8],[0,"tsconfig.json"],[9],[0," to the current version of the ECMAScript standard so that type-checking uses the latest and greatest from the JavaScript standard library. The Babel configuration in your app\'s "],[7,"code",true],[8],[0,"config/targets.js"],[9],[0," and any included polyfills will determine the final build output."],[9],[0,"\\n"],[9],[0,"\\n"],[7,"li",true],[8],[7,"p",true],[8],[0,"If you make changes to the paths included in or excluded from the build via your "],[7,"code",true],[8],[0,"tsconfig.json"],[9],[0," (using the "],[7,"code",true],[8],[0,"\\"include\\""],[9],[0,", "],[7,"code",true],[8],[0,"\\"exclude\\""],[9],[0,", or "],[7,"code",true],[8],[0,"\\"files\\""],[9],[0," keys), you will need to restart the server to take the changes into account: ember-cli-typescript does not currently watch the "],[7,"code",true],[8],[0,"tsconfig.json"],[9],[0," file. For more details, see "],[7,"a",true],[10,"href","https://www.typescriptlang.org/docs/handbook/tsconfig-json.html"],[10,"class","docs-md__a"],[8],[0,"the TypeScript reference materials for "],[7,"code",true],[8],[0,"tsconfig.json"],[9],[9],[0,"."],[9],[0,"\\n"],[9],[0,"\\n"],[9],[0,"\\n\\n      "],[7,"h2",true],[10,"id","enabling-sourcemaps"],[10,"class","docs-md__h2"],[8],[7,"a",true],[10,"href","#enabling-sourcemaps"],[10,"class","heading-anchor"],[8],[0,"Enabling Sourcemaps"],[9],[9],[0,"\\n    "],[7,"p",true],[8],[0,"To enable TypeScript sourcemaps, you\'ll need to add the corresponding configuration for Babel to your "],[7,"code",true],[8],[0,"ember-cli-build.js"],[9],[0," file:"],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedts"],[8],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"const"],[9],[0," app = "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"new"],[9],[0," EmberApp(defaults, {\\n  babel: {\\n    sourceMaps: "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\'inline\'"],[9],[0,",\\n  },\\n});"],[9],[9],[0,"\\n"],[7,"p",true],[8],[0,"(Note that this "],[7,"em",true],[8],[0,"will"],[9],[0," noticeably slow down your app rebuilds.)"],[9],[0,"\\n"],[7,"p",true],[8],[0,"If you\'re updating from an older version of the addon, you may also need to update your "],[7,"code",true],[8],[0,"tsconfig.json"],[9],[0,". (Current versions generate the correct config at installation.) Either run "],[7,"code",true],[8],[0,"ember generate ember-cli-typescript"],[9],[0," or verify you have the same sourcemap settings in your "],[7,"code",true],[8],[0,"tscsonfig.json"],[9],[0," that appear in "],[7,"a",true],[10,"href","https://github.com/typed-ember/ember-cli-typescript/blob/master/blueprints/ember-cli-typescript/files/tsconfig.json"],[10,"class","docs-md__a"],[8],[0,"the blueprint"],[9],[0,"."],[9],[9]],"hasEval":false}',meta:{moduleName:"dummy/templates/docs/configuration.hbs"}})
e.default=t}),define("dummy/templates/docs/index",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"ZW+GUFjw",block:'{"symbols":[],"statements":[[7,"div",true],[10,"class","docs-md"],[8],[7,"h1",true],[10,"id","installation"],[10,"class","docs-md__h1"],[8],[0,"Installation"],[9],[0,"\\n    "],[7,"p",true],[8],[0,"You can simply "],[7,"code",true],[8],[0,"ember install"],[9],[0," the dependency like normal:"],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedsh"],[8],[0,"ember install ember-cli-typescript@latest"],[9],[9],[0,"\\n"],[7,"p",true],[8],[0,"All dependencies will be added to your "],[7,"code",true],[8],[0,"package.json"],[9],[0,", and you\'re ready to roll! "],[7,"strong",true],[8],[0,"If you\'re upgrading from a previous release, see below!"],[9],[0," you should check to merge any tweaks you\'ve made to "],[7,"code",true],[8],[0,"tsconfig.json"],[9],[0,"."],[9],[0,"\\n\\n      "],[7,"h2",true],[10,"id","installation-results"],[10,"class","docs-md__h2"],[8],[7,"a",true],[10,"href","#installation-results"],[10,"class","heading-anchor"],[8],[0,"Installation Results"],[9],[9],[0,"\\n    "],[7,"p",true],[8],[0,"Installing ember-cli-typescript modifies your project in two ways:"],[9],[0,"\\n"],[7,"ul",true],[8],[0,"\\n"],[7,"li",true],[8],[0,"installing a number of other packages to make TypeScript work in your app or addon"],[9],[0,"\\n"],[7,"li",true],[8],[0,"generating a number of files in your project"],[9],[0,"\\n"],[9],[0,"\\n\\n      "],[7,"h3",true],[10,"id","other-packages-this-addon-installs"],[10,"class","docs-md__h3"],[8],[7,"a",true],[10,"href","#other-packages-this-addon-installs"],[10,"class","heading-anchor"],[8],[0,"Other packages this addon installs"],[9],[9],[0,"\\n    "],[7,"p",true],[8],[0,"We install the following packages—all at their current \\"latest\\" value—or generated:"],[9],[0,"\\n"],[7,"ul",true],[8],[0,"\\n"],[7,"li",true],[8],[7,"a",true],[10,"href","https://github.com/Microsoft/TypeScript"],[10,"class","docs-md__a"],[8],[7,"code",true],[8],[0,"typescript"],[9],[9],[9],[0,"\\n"],[7,"li",true],[8],[7,"strong",true],[8],[0,"@types/ember"],[9],[0," ("],[7,"a",true],[10,"href","https://www.npmjs.com/package/@types/ember"],[10,"class","docs-md__a"],[8],[0,"npm"],[9],[0," | "],[7,"a",true],[10,"href","https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/ember"],[10,"class","docs-md__a"],[8],[0,"source"],[9],[0,") - Types for "],[7,"a",true],[10,"href","https://github.com/emberjs/ember.js"],[10,"class","docs-md__a"],[8],[0,"Ember.js"],[9],[0," which includes"],[7,"ul",true],[8],[0,"\\n"],[7,"li",true],[8],[7,"strong",true],[8],[0,"@types/ember__string"],[9],[0," ("],[7,"a",true],[10,"href","https://www.npmjs.com/package/@types/ember__string"],[10,"class","docs-md__a"],[8],[0,"npm"],[9],[0," | "],[7,"a",true],[10,"href","https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/ember__string"],[10,"class","docs-md__a"],[8],[0,"source"],[9],[0,") - types for the "],[7,"a",true],[10,"href","https://www.emberjs.com/api/ember/3.4/modules/@ember%2Fstring"],[10,"class","docs-md__a"],[8],[7,"code",true],[8],[0,"@ember/string"],[9],[0," package"],[9],[9],[0,"\\n"],[7,"li",true],[8],[7,"strong",true],[8],[0,"@types/ember__object"],[9],[0," ("],[7,"a",true],[10,"href","https://www.npmjs.com/package/@types/ember__object"],[10,"class","docs-md__a"],[8],[0,"npm"],[9],[0," | "],[7,"a",true],[10,"href","https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/ember__object"],[10,"class","docs-md__a"],[8],[0,"source"],[9],[0,") - types for the "],[7,"a",true],[10,"href","https://www.emberjs.com/api/ember/3.4/modules/@ember%2Fobject"],[10,"class","docs-md__a"],[8],[7,"code",true],[8],[0,"@ember/object"],[9],[0," package"],[9],[9],[0,"\\n"],[7,"li",true],[8],[7,"strong",true],[8],[0,"@types/ember__utils"],[9],[0," ("],[7,"a",true],[10,"href","https://www.npmjs.com/package/@types/ember__utils"],[10,"class","docs-md__a"],[8],[0,"npm"],[9],[0," | "],[7,"a",true],[10,"href","https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/ember__utils"],[10,"class","docs-md__a"],[8],[0,"source"],[9],[0,") - types for the "],[7,"a",true],[10,"href","https://www.emberjs.com/api/ember/3.4/modules/@ember%2Futils"],[10,"class","docs-md__a"],[8],[7,"code",true],[8],[0,"@ember/utils"],[9],[0," package"],[9],[9],[0,"\\n"],[7,"li",true],[8],[7,"strong",true],[8],[0,"@types/ember__array"],[9],[0," ("],[7,"a",true],[10,"href","https://www.npmjs.com/package/@types/ember__array"],[10,"class","docs-md__a"],[8],[0,"npm"],[9],[0," | "],[7,"a",true],[10,"href","https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/ember__array"],[10,"class","docs-md__a"],[8],[0,"source"],[9],[0,") - types for the "],[7,"a",true],[10,"href","https://www.emberjs.com/api/ember/3.4/modules/@ember%2Farray"],[10,"class","docs-md__a"],[8],[7,"code",true],[8],[0,"@ember/array"],[9],[0," package"],[9],[9],[0,"\\n"],[7,"li",true],[8],[7,"strong",true],[8],[0,"@types/ember__component"],[9],[0," ("],[7,"a",true],[10,"href","https://www.npmjs.com/package/@types/ember__component"],[10,"class","docs-md__a"],[8],[0,"npm"],[9],[0," | "],[7,"a",true],[10,"href","https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/ember__component"],[10,"class","docs-md__a"],[8],[0,"source"],[9],[0,") - types for the "],[7,"a",true],[10,"href","https://www.emberjs.com/api/ember/3.4/modules/@ember%2Fcomponent"],[10,"class","docs-md__a"],[8],[7,"code",true],[8],[0,"@ember/component"],[9],[0," package"],[9],[9],[0,"\\n"],[7,"li",true],[8],[7,"strong",true],[8],[0,"@types/ember__engine"],[9],[0," ("],[7,"a",true],[10,"href","https://www.npmjs.com/package/@types/ember__engine"],[10,"class","docs-md__a"],[8],[0,"npm"],[9],[0," | "],[7,"a",true],[10,"href","https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/ember__engine"],[10,"class","docs-md__a"],[8],[0,"source"],[9],[0,") - types for the "],[7,"a",true],[10,"href","https://www.emberjs.com/api/ember/3.4/modules/@ember%2Fengine"],[10,"class","docs-md__a"],[8],[7,"code",true],[8],[0,"@ember/engine"],[9],[0," package"],[9],[9],[0,"\\n"],[7,"li",true],[8],[7,"strong",true],[8],[0,"@types/ember__application"],[9],[0," ("],[7,"a",true],[10,"href","https://www.npmjs.com/package/@types/ember__application"],[10,"class","docs-md__a"],[8],[0,"npm"],[9],[0," | "],[7,"a",true],[10,"href","https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/ember__application"],[10,"class","docs-md__a"],[8],[0,"source"],[9],[0,") - types for the "],[7,"a",true],[10,"href","https://www.emberjs.com/api/ember/3.4/modules/@ember%2Fapplication"],[10,"class","docs-md__a"],[8],[7,"code",true],[8],[0,"@ember/application"],[9],[0," package"],[9],[9],[0,"\\n"],[7,"li",true],[8],[7,"strong",true],[8],[0,"@types/ember__controller"],[9],[0," ("],[7,"a",true],[10,"href","https://www.npmjs.com/package/@types/ember__controller"],[10,"class","docs-md__a"],[8],[0,"npm"],[9],[0," | "],[7,"a",true],[10,"href","https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/ember__controller"],[10,"class","docs-md__a"],[8],[0,"source"],[9],[0,") - types for the "],[7,"a",true],[10,"href","https://www.emberjs.com/api/ember/3.4/modules/@ember%2Fcontroller"],[10,"class","docs-md__a"],[8],[7,"code",true],[8],[0,"@ember/controller"],[9],[0," package"],[9],[9],[0,"\\n"],[7,"li",true],[8],[7,"strong",true],[8],[0,"@types/ember__service"],[9],[0," ("],[7,"a",true],[10,"href","https://www.npmjs.com/package/@types/ember__service"],[10,"class","docs-md__a"],[8],[0,"npm"],[9],[0," | "],[7,"a",true],[10,"href","https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/ember__service"],[10,"class","docs-md__a"],[8],[0,"source"],[9],[0,") - types for the "],[7,"a",true],[10,"href","https://www.emberjs.com/api/ember/3.4/modules/@ember%2Fservice"],[10,"class","docs-md__a"],[8],[7,"code",true],[8],[0,"@ember/service"],[9],[0," package"],[9],[9],[0,"\\n"],[7,"li",true],[8],[7,"strong",true],[8],[0,"@types/ember__runloop"],[9],[0," ("],[7,"a",true],[10,"href","https://www.npmjs.com/package/@types/ember__runloop"],[10,"class","docs-md__a"],[8],[0,"npm"],[9],[0," | "],[7,"a",true],[10,"href","https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/ember__runloop"],[10,"class","docs-md__a"],[8],[0,"source"],[9],[0,") - types for the "],[7,"a",true],[10,"href","https://www.emberjs.com/api/ember/3.4/modules/@ember%2Frunloop"],[10,"class","docs-md__a"],[8],[7,"code",true],[8],[0,"@ember/runloop"],[9],[0," package"],[9],[9],[0,"\\n"],[7,"li",true],[8],[7,"strong",true],[8],[0,"@types/ember__error"],[9],[0," ("],[7,"a",true],[10,"href","https://www.npmjs.com/package/@types/ember__error"],[10,"class","docs-md__a"],[8],[0,"npm"],[9],[0," | "],[7,"a",true],[10,"href","https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/ember__error"],[10,"class","docs-md__a"],[8],[0,"source"],[9],[0,") - types for the "],[7,"a",true],[10,"href","https://www.emberjs.com/api/ember/3.4/modules/@ember%2Ferror"],[10,"class","docs-md__a"],[8],[7,"code",true],[8],[0,"@ember/error"],[9],[0," package"],[9],[9],[0,"\\n"],[7,"li",true],[8],[7,"strong",true],[8],[0,"@types/ember__polyfills"],[9],[0," ("],[7,"a",true],[10,"href","https://www.npmjs.com/package/@types/ember__polyfills"],[10,"class","docs-md__a"],[8],[0,"npm"],[9],[0," | "],[7,"a",true],[10,"href","https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/ember__polyfills"],[10,"class","docs-md__a"],[8],[0,"source"],[9],[0,") - types for the "],[7,"a",true],[10,"href","https://www.emberjs.com/api/ember/3.4/modules/@ember%2Fpolyfills"],[10,"class","docs-md__a"],[8],[7,"code",true],[8],[0,"@ember/polyfills"],[9],[0," package"],[9],[9],[0,"\\n"],[7,"li",true],[8],[7,"strong",true],[8],[0,"@types/ember__debug"],[9],[0," ("],[7,"a",true],[10,"href","https://www.npmjs.com/package/@types/ember__debug"],[10,"class","docs-md__a"],[8],[0,"npm"],[9],[0," | "],[7,"a",true],[10,"href","https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/ember__debug"],[10,"class","docs-md__a"],[8],[0,"source"],[9],[0,") - types for the "],[7,"a",true],[10,"href","https://www.emberjs.com/api/ember/3.4/modules/@ember%2Fdebug"],[10,"class","docs-md__a"],[8],[7,"code",true],[8],[0,"@ember/debug"],[9],[0," package"],[9],[9],[0,"\\n"],[7,"li",true],[8],[7,"strong",true],[8],[0,"@types/ember__test"],[9],[0," ("],[7,"a",true],[10,"href","https://www.npmjs.com/package/@types/ember__test"],[10,"class","docs-md__a"],[8],[0,"npm"],[9],[0," | "],[7,"a",true],[10,"href","https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/ember__test"],[10,"class","docs-md__a"],[8],[0,"source"],[9],[0,") - types for the "],[7,"a",true],[10,"href","https://www.emberjs.com/api/ember/3.4/modules/@ember%2Ftest"],[10,"class","docs-md__a"],[8],[7,"code",true],[8],[0,"@ember/test"],[9],[0," package"],[9],[9],[0,"\\n"],[7,"li",true],[8],[7,"strong",true],[8],[0,"@types/ember__routing"],[9],[0," ("],[7,"a",true],[10,"href","https://www.npmjs.com/package/@types/ember__routing"],[10,"class","docs-md__a"],[8],[0,"npm"],[9],[0," | "],[7,"a",true],[10,"href","https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/ember__routing"],[10,"class","docs-md__a"],[8],[0,"source"],[9],[0,") - types for the "],[7,"a",true],[10,"href","https://www.emberjs.com/api/ember/3.4/modules/@ember%2Frouting"],[10,"class","docs-md__a"],[8],[7,"code",true],[8],[0,"@ember/routing"],[9],[0," package"],[9],[9],[0,"\\n"],[9],[0,"\\n"],[9],[0,"\\n"],[7,"li",true],[8],[7,"strong",true],[8],[0,"@types/ember-data"],[9],[0," - ("],[7,"a",true],[10,"href","https://www.npmjs.com/package/@types/ember-data"],[10,"class","docs-md__a"],[8],[0,"npm"],[9],[0," | "],[7,"a",true],[10,"href","https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/ember-data"],[10,"class","docs-md__a"],[8],[0,"source"],[9],[0,") - Types for "],[7,"a",true],[10,"href","https://github.com/emberjs/data"],[10,"class","docs-md__a"],[8],[0,"Ember-Data"],[9],[9],[0,"\\n"],[7,"li",true],[8],[7,"strong",true],[8],[0,"@types/rsvp"],[9],[0," - ("],[7,"a",true],[10,"href","https://www.npmjs.com/package/@types/rsvp"],[10,"class","docs-md__a"],[8],[0,"npm"],[9],[0," | "],[7,"a",true],[10,"href","https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/rsvp"],[10,"class","docs-md__a"],[8],[0,"source"],[9],[0,") - Types for "],[7,"a",true],[10,"href","https://github.com/tildeio/rsvp.js/"],[10,"class","docs-md__a"],[8],[0,"RSVP.js"],[9],[9],[0,"\\n"],[7,"li",true],[8],[7,"strong",true],[8],[0,"@types/ember__test-helpers"],[9],[0," - ("],[7,"a",true],[10,"href","https://www.npmjs.com/package/@types/ember__test-helpers"],[10,"class","docs-md__a"],[8],[0,"npm"],[9],[0," | "],[7,"a",true],[10,"href","https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/ember__test-helpers"],[10,"class","docs-md__a"],[8],[0,"source"],[9],[0,") – Types for "],[7,"a",true],[10,"href","https://github.com/emberjs/ember-test-helpers"],[10,"class","docs-md__a"],[8],[0,"@ember/test-helpers"],[9],[0,"."],[9],[0,"\\n"],[9],[0,"\\n\\n      "],[7,"h3",true],[10,"id","files-this-addon-generates"],[10,"class","docs-md__h3"],[8],[7,"a",true],[10,"href","#files-this-addon-generates"],[10,"class","heading-anchor"],[8],[0,"Files this addon generates"],[9],[9],[0,"\\n    "],[7,"p",true],[8],[0,"We add the following files to your project:"],[9],[0,"\\n"],[7,"ul",true],[8],[0,"\\n"],[7,"li",true],[8],[7,"a",true],[10,"href","https://www.typescriptlang.org/docs/handbook/tsconfig-json.html"],[10,"class","docs-md__a"],[8],[7,"code",true],[8],[0,"tsconfig.json"],[9],[9],[9],[0,"\\n"],[7,"li",true],[8],[7,"code",true],[8],[0,"types/<app name>/index.d.ts"],[9],[0," – the location for any global type declarations you need to write for you own application; see "],[7,"a",true],[10,"href","./docs/ts-guide/using-ts-effectively#global-types-for-your-package"],[10,"class","docs-md__a"],[8],[7,"strong",true],[8],[0,"Using TS Effectively: Global types for your package"],[9],[9],[0," for information on its default contents and how to use it effectively"],[9],[0,"\\n"],[7,"li",true],[8],[7,"code",true],[8],[0,"app/config/environment.d.ts"],[9],[0," – a basic set of types defined for the contents of the "],[7,"code",true],[8],[0,"config/environment.js"],[9],[0," file in your app; see "],[7,"a",true],[10,"href","#environment-and-configuration-typings"],[10,"class","docs-md__a"],[8],[0,"Environment and configuration typings"],[9],[0," for details"],[9],[0,"\\n"],[9],[9]],"hasEval":false}',meta:{moduleName:"dummy/templates/docs/index.hbs"}})
e.default=t}),define("dummy/templates/docs/troubleshooting/conflicting-types",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"xYYo22Sv",block:'{"symbols":[],"statements":[[7,"div",true],[10,"class","docs-md"],[8],[7,"h1",true],[10,"id","conflicting-type-dependencies"],[10,"class","docs-md__h1"],[8],[0,"Conflicting Type Dependencies"],[9],[0,"\\n    "],[7,"p",true],[8],[0,"You will sometimes see "],[7,"b",true],[8],[0,"Duplicate identifier"],[9],[0," errors when type-checking your application."],[9],[0,"\\n"],[7,"details",true],[8],[7,"summary",true],[8],[7,"i",true],[8],[0,"An example duplicate identifier error"],[9],[9],[0,"\\n\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedsh"],[8],[0,"yarn tsc --noEmit\\nyarn run v1.15.2\\n"],[7,"span",true],[10,"class","hljs-meta"],[8],[0,"$"],[9],[0," /Users/chris/dev/teaching/emberconf-2019/node_modules/.bin/tsc --noEmit\\nnode_modules/@types/ember__object/index.d.ts:23:22 - error TS2300: Duplicate identifier \'EmberObject\'.\\n\\n23 export default class EmberObject extends CoreObject.extend(Observable) {}\\n                        ~~~~~~~~~~~\\n\\n  node_modules/@types/ember__component/node_modules/@types/ember__object/index.d.ts:23:22\\n    23   export default class EmberObject extends CoreObject.extend(Observable) {}\\n                             ~~~~~~~~~~~\\n    \'EmberObject\' was also declared here.\\n\\nnode_modules/@types/ember__component/node_modules/@types/ember__object/index.d.ts:23:22 - error TS2300: Duplicate identifier \'EmberObject\'.\\n\\n8   export default class EmberObject extends CoreObject.extend(Observable) {}\\n                         ~~~~~~~~~~~\\n\\n  node_modules/@types/ember__object/index.d.ts:23:22\\n    23 export default class EmberObject extends CoreObject.extend(Observable) {}\\n                            ~~~~~~~~~~~\\n    \'EmberObject\' was also declared here.\\n\\n\\nFound 2 errors.\\n\\nerror Command failed with exit code 1."],[9],[9],[0,"\\n"],[9],[0,"\\n\\n"],[7,"p",true],[8],[0,"This occurs whenever your "],[7,"code",true],[8],[0,"yarn.lock"],[9],[0," or "],[7,"code",true],[8],[0,"package-lock.json"],[9],[0," files include more than a single copy of a given set of type definitions—here, types for "],[7,"code",true],[8],[0,"@ember/object"],[9],[0,", named "],[7,"code",true],[8],[0,"@types/ember__object"],[9],[0,". See below for details on the yarn behavior, and "],[4,"link-to",null,[["route"],["docs.type-defs.package-names"]],{"statements":[[7,"b",true],[8],[0,"Understanding the Package Names"],[9]],"parameters":[]},null],[0," for details on the package names."],[9],[0,"\\n\\n      "],[7,"h2",true],[10,"id","workarounds"],[10,"class","docs-md__h2"],[8],[7,"a",true],[10,"href","#workarounds"],[10,"class","heading-anchor"],[8],[0,"Workarounds"],[9],[9],[0,"\\n    "],[7,"p",true],[8],[0,"There are currently two recommended workarounds for this:"],[9],[0,"\\n"],[7,"ul",true],[8],[0,"\\n"],[7,"li",true],[8],[7,"p",true],[8],[0,"You can specify a specific version of the package to use in the "],[7,"code",true],[8],[0,"\\"resolutions\\""],[9],[0," key in "],[7,"code",true],[8],[0,"package.json"],[9],[0,". For example, if you saw that you had "],[7,"code",true],[8],[0,"@types/ember__object@3.0.8"],[9],[0," from the default package installs but "],[7,"code",true],[8],[0,"@types/ember__object@3.0.5"],[9],[0," from "],[7,"code",true],[8],[0,"some-cool-ts-addon"],[9],[0,", you could force yarn to use "],[7,"code",true],[8],[0,"3.0.8"],[9],[0," like so:"],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedjson"],[8],[0,"  {\\n    "],[7,"span",true],[10,"class","hljs-attr"],[8],[0,"\\"resolutions\\""],[9],[0,": {\\n      "],[7,"span",true],[10,"class","hljs-attr"],[8],[0,"\\"@types/ember__object\\""],[9],[0,": "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\\"3.0.8\\""],[9],[0,"\\n    }\\n  }"],[9],[9],[0,"\\n"],[9],[0,"\\n"],[7,"li",true],[8],[7,"p",true],[8],[0,"You can identify the dependencies which installed the type dependencies transitively, and uninstall and reinstall them. For example, if running "],[7,"code",true],[8],[0,"yarn why"],[9],[0," reported you had one version of "],[7,"code",true],[8],[0,"@types/ember__object"],[9],[0," from "],[7,"a",true],[10,"href","../../docs#other-packages-this-addon-installs"],[10,"class","docs-md__a"],[8],[0,"the normally-installed set of packages"],[9],[0,", and one from "],[7,"code",true],[8],[0,"some-cool-ts-addon"],[9],[0,", you could run this:"],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedsh"],[8],[0,"  yarn remove @types/ember some-cool-ts-addon\\n  yarn add -D @types/ember some-cool-ts-addon"],[9],[9],[0,"\\n"],[9],[0,"\\n"],[9],[0,"\\n\\n      "],[7,"h2",true],[10,"id","understanding-the-problem"],[10,"class","docs-md__h2"],[8],[7,"a",true],[10,"href","#understanding-the-problem"],[10,"class","heading-anchor"],[8],[0,"Understanding the Problem"],[9],[9],[0,"\\n    "],[7,"p",true],[8],[0,"When you are using TypeScript in your Ember application, you consume Ember\'s types through "],[7,"a",true],[10,"href","https://github.com/DefinitelyTyped/DefinitelyTyped"],[10,"class","docs-md__a"],[8],[0,"DefinitelyTyped"],[9],[0,", the tool the TypeScript team built to power the "],[7,"code",true],[8],[0,"@types/*"],[9],[0," definitions. That tooling examines the dependencies implied by the package imports and generates a "],[7,"code",true],[8],[0,"package.json"],[9],[0," with those types specified with a "],[7,"code",true],[8],[0,"*"],[9],[0," dependency version. On initial installation of your dependencies, yarn installs the highest version of the package available, and correctly deduplicates that across both your own package and all the "],[7,"code",true],[8],[0,"@types"],[9],[0," packages which reference each other."],[9],[0,"\\n"],[7,"p",true],[8],[0,"However, later installs may introduce conflicting versions of the types, simply by way of yarn\'s normal update rules. TypeScript requires that there be one and only one type definition a given item can resolve to. Yarn actively avoids changing a previously-installed version of a transitive dependency when a newly installed package depends on the same dependency transitively. Thus, if one of your dependencies "],[7,"em",true],[8],[0,"also"],[9],[0," depends on the same package from "],[7,"code",true],[8],[0,"@types/*"],[9],[0," that you do, and you upgrade your dependence on that type by editing your "],[7,"code",true],[8],[0,"package.json"],[9],[0," file and running "],[7,"code",true],[8],[0,"yarn"],[9],[0," again, TypeScript will suddenly start offering the error described in detail above:"],[9],[0,"\\n"],[7,"blockquote",true],[10,"class","docs-md__blockquote"],[8],[7,"p",true],[8],[0,"Duplicate identifier \'EmberObject\'.ts(2300)"],[9],[0,"\\n"],[9],[7,"p",true],[8],[0,"Normally, running "],[7,"code",true],[8],[0,"yarn upgrade @types/ember__object"],[9],[0," instead of updating your "],[7,"code",true],[8],[0,"package.json"],[9],[0," file will resolve this for you, because yarn will deduplicate the packages once again. ::TODO: confirm this is accurate!::"],[9],[0,"\\n"],[7,"p",true],[8],[0,"Let\'s imagine three packages, "],[7,"code",true],[8],[0,"A"],[9],[0,", "],[7,"code",true],[8],[0,"B"],[9],[0,", and "],[7,"code",true],[8],[0,"C"],[9],[0,", where "],[7,"code",true],[8],[0,"A"],[9],[0," is "],[7,"em",true],[8],[0,"your"],[9],[0," app or library, and "],[7,"code",true],[8],[0,"B"],[9],[0," and "],[7,"code",true],[8],[0,"C"],[9],[0," have the following versions and dependencies:"],[9],[0,"\\n"],[7,"ul",true],[8],[0,"\\n"],[7,"li",true],[8],[7,"p",true],[8],[7,"code",true],[8],[0,"C"],[9],[0," is currently at version "],[7,"code",true],[8],[0,"1.2.3"],[9],[0,"."],[9],[0,"\\n"],[9],[0,"\\n"],[7,"li",true],[8],[7,"p",true],[8],[7,"code",true],[8],[0,"B"],[9],[0," is at version "],[7,"code",true],[8],[0,"4.5.6"],[9],[0,". It depends on "],[7,"code",true],[8],[0,"C"],[9],[0," with a "],[7,"code",true],[8],[0,"*"],[9],[0," dependency. So the "],[7,"code",true],[8],[0,"dependencies"],[9],[0," key in its "],[7,"code",true],[8],[0,"package.json"],[9],[0," looks like this:"],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedjson"],[8],[0,"  {\\n    "],[7,"span",true],[10,"class","hljs-attr"],[8],[0,"\\"dependencies\\""],[9],[0,": {\\n      "],[7,"span",true],[10,"class","hljs-attr"],[8],[0,"\\"C\\""],[9],[0,": "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\\"*\\""],[9],[0,"\\n    }\\n  }"],[9],[9],[0,"\\n"],[9],[0,"\\n"],[9],[0,"\\n"],[7,"p",true],[8],[0,"Now, you install "],[7,"em",true],[8],[0,"only"],[9],[0," "],[7,"code",true],[8],[0,"B"],[9],[0," (this is the equivalent of installing just the basic type definitions in your package):"],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedjson"],[8],[0,"{\\n  "],[7,"span",true],[10,"class","hljs-attr"],[8],[0,"\\"dependencies\\""],[9],[0,": {\\n    "],[7,"span",true],[10,"class","hljs-attr"],[8],[0,"\\"B\\""],[9],[0,": "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\\"~4.5.6\\""],[9],[0,"\\n  }\\n}"],[9],[9],[0,"\\n"],[7,"p",true],[8],[0,"The first time you install these, you will get a "],[7,"em",true],[8],[0,"single"],[9],[0," version of "],[7,"code",true],[8],[0,"C"],[9],[0," – "],[7,"code",true],[8],[0,"1.2.3"],[9],[0,"."],[9],[0,"\\n"],[7,"p",true],[8],[0,"Now, let\'s say that "],[7,"code",true],[8],[0,"C"],[9],[0," publishes a new version, "],[7,"code",true],[8],[0,"1.2.4"],[9],[0,", and "],[7,"code",true],[8],[0,"A"],[9],[0," (your app or library) adds a dependency on both "],[7,"code",true],[8],[0,"C"],[9],[0," like so:"],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedjson"],[8],[0,"{\\n  "],[7,"span",true],[10,"class","hljs-attr"],[8],[0,"\\"dependencies\\""],[9],[0,": {\\n    "],[7,"span",true],[10,"class","hljs-attr"],[8],[0,"\\"B\\""],[9],[0,": "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\\"~4.5.6\\""],[9],[0,",\\n    "],[7,"span",true],[10,"class","hljs-attr"],[8],[0,"\\"C\\""],[9],[0,": "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\\"~1.2.0\\""],[9],[0,"\\n  }\\n}"],[9],[9],[0,"\\n"],[7,"p",true],[8],[0,"When yarn runs, it goes out of its way to leave the "],[7,"em",true],[8],[0,"existing"],[9],[0," installation of "],[7,"code",true],[8],[0,"C"],[9],[0," in place, while adding a "],[7,"em",true],[8],[0,"new"],[9],[0," version for you as a top-level consumer. So now you have two versions of "],[7,"code",true],[8],[0,"C"],[9],[0," installed in your "],[7,"code",true],[8],[0,"node_modules"],[9],[0," directory: "],[7,"code",true],[8],[0,"1.2.3"],[9],[0," (for "],[7,"code",true],[8],[0,"B"],[9],[0,") and "],[7,"code",true],[8],[0,"1.2.4"],[9],[0," (for "],[7,"code",true],[8],[0,"A"],[9],[0,", your app or library)."],[9],[0,"\\n"],[7,"p",true],[8],[0,"What\'s important to understand here is that this is "],[7,"em",true],[8],[0,"exactly"],[9],[0," the behavior you want as the default in the Node ecosystem. Automatically updating a transitive dependency—even when the change is simply a bug fix release—"],[7,"em",true],[8],[0,"can"],[9],[0," cause your entire app or library to stop working. If one of your dependencies accidentally depended on that buggy behavior, and adding a direct dependency on the fixed version caused the buggy version to be upgraded, you\'re just out of luck. Yarn accounts for this by resolving packages to the same version during initial installation, but leaving existing package resolutions as they are when adding new dependencies later."],[9],[0,"\\n"],[7,"p",true],[8],[0,"Unfortunately, this is also the "],[7,"em",true],[8],[0,"opposite"],[9],[0," of what you want for TypeScript, which needs a single source of truth for the types in your app or library. When you install the type definitions, and then "],[7,"em",true],[8],[0,"later"],[9],[0," install a package which transitively depends on those type definitions"],[9],[0,"\\n\\n      "],[7,"h2",true],[10,"id","understanding-the-workarounds"],[10,"class","docs-md__h2"],[8],[7,"a",true],[10,"href","#understanding-the-workarounds"],[10,"class","heading-anchor"],[8],[0,"Understanding the Workarounds"],[9],[9],[0,"\\n    "],[7,"p",true],[8],[0,"The two solutions listed above both make sure Yarn only installs a single version of the package."],[9],[0,"\\n"],[7,"ul",true],[8],[0,"\\n"],[7,"li",true],[8],[7,"p",true],[8],[0,"Specifying a version in the "],[7,"code",true],[8],[0,"\\"resolutions\\""],[9],[0," field in your "],[7,"code",true],[8],[0,"package.json"],[9],[0," simply forces Yarn to resolve "],[7,"em",true],[8],[0,"every"],[9],[0," reference to that package to a single version. This actually works extremely well for types, but it means that every time you either update the types package(s) yourself "],[7,"em",true],[8],[0,"or"],[9],[0," update a package which transitively depends on them, you have to edit this value manually as well."],[9],[0,"\\n"],[9],[0,"\\n"],[7,"li",true],[8],[7,"p",true],[8],[0,"Uninstalling and reinstalling both the impacted packages and "],[7,"em",true],[8],[0,"all"],[9],[0," the packages which transitively depend on them gives you the same behavior as an initial install… because that\'s exactly what you\'re doing. The downside, of course, is that you have to identify and uninstall and reinstall all top-level packages which transitively depend on the files, and this introduces risk by way of "],[7,"em",true],[8],[0,"other"],[9],[0," transitive dependencies being updated."],[9],[0,"\\n"],[9],[0,"\\n"],[9],[9]],"hasEval":false}',meta:{moduleName:"dummy/templates/docs/troubleshooting/conflicting-types.hbs"}})
e.default=t}),define("dummy/templates/docs/ts-guide/current-limitations",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"MTgaRDH+",block:'{"symbols":[],"statements":[[7,"div",true],[10,"class","docs-md"],[8],[7,"h1",true],[10,"id","current-limitations"],[10,"class","docs-md__h1"],[8],[0,"Current limitations"],[9],[0,"\\n    "],[7,"p",true],[8],[0,"While TS already works nicely for many things in Ember, there are a number of corners where it "],[7,"em",true],[8],[0,"won\'t"],[9],[0," help you out. Some of them are just a matter of further work on updating the "],[7,"a",true],[10,"href","https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/ember"],[10,"class","docs-md__a"],[8],[0,"existing typings"],[9],[0,"; others are a matter of further support landing in TypeScript itself, or changes to Ember\'s object model."],[9],[0,"\\n\\n      "],[7,"h2",true],[10,"id","some-imports-don-t-resolve"],[10,"class","docs-md__h2"],[8],[7,"a",true],[10,"href","#some-imports-don-t-resolve"],[10,"class","heading-anchor"],[8],[0,"Some "],[7,"code",true],[8],[0,"import"],[9],[0,"s don\'t resolve"],[9],[9],[0,"\\n    "],[7,"p",true],[8],[0,"You\'ll frequently see errors for imports which TypeScript doesn\'t know how to resolve. For example, if you use Ember Concurrency today and try to import its "],[7,"code",true],[8],[0,"task"],[9],[0," helper:"],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedtypescript"],[8],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"import"],[9],[0," { task } "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"from"],[9],[0," "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\'ember-concurrency\'"],[9],[0,";"],[9],[9],[0,"\\n"],[7,"p",true],[8],[0,"You\'ll see an error, because there aren\'t yet type definitions for it. You may see the same with some addons as well. "],[7,"strong",true],[8],[0,"These won\'t stop the build from working;"],[9],[0," they just mean TypeScript doesn\'t know where to find those."],[9],[0,"\\n"],[7,"p",true],[8],[0,"Writing these missing type definitions is a great way to pitch in! Jump in "],[7,"code",true],[8],[0,"#e-typescript"],[9],[0," on the "],[7,"a",true],[10,"href","https://discord.gg/zT3asNS"],[10,"class","docs-md__a"],[8],[0,"Ember Community Discord server"],[9],[0," and we\'ll be happy to help you."],[9],[0,"\\n\\n      "],[7,"h2",true],[10,"id","templates"],[10,"class","docs-md__h2"],[8],[7,"a",true],[10,"href","#templates"],[10,"class","heading-anchor"],[8],[0,"Templates"],[9],[9],[0,"\\n    "],[7,"p",true],[8],[0,"Templates are currently totally non-type-checked. This means that you lose any safety when moving into a template context, even if using a Glimmer "],[7,"code",true],[8],[0,"Component"],[9],[0," in Ember Octane."],[9],[0,"\\n"],[7,"p",true],[8],[0,"Addons need to import templates from the associated "],[7,"code",true],[8],[0,".hbs"],[9],[0," file to bind to the layout of any components they export. The TypeScript compiler will report that it cannot resolve the module, since it does not know how to resolve files ending in "],[7,"code",true],[8],[0,".hbs"],[9],[0,". To resolve this, you can provide this set of definitions to "],[7,"code",true],[8],[0,"my-addon/types/global.d.ts"],[9],[0,", which will allow the import to succeed:"],[9],[0,"\\n"],[7,"p",true],[8],[4,"docs-snippet",null,[["name","title","showCopy","language"],["my-addon.d.ts","my-addon/types/global.d.ts",true,"ts"]],{"statements":[[0,"\\ndeclare module \'"],[7,"em",true],[8],[0,"/template\' {\\n  import { TemplateFactory } from \'htmlbars-inline-precompile\';   const template: TemplateFactory;\\n  export default template;\\n} declare module \'app/templates/"],[9],[0,"\' {\\n  import { TemplateFactory } from \'htmlbars-inline-precompile\';   const template: TemplateFactory;\\n  export default template;\\n} declare module \'addon/templates/*\' {\\n  import { TemplateFactory } from \'htmlbars-inline-precompile\';   const template: TemplateFactory;\\n  export default template;\\n}\\n"]],"parameters":[]},null],[9],[0,"\\n\\n      "],[7,"h2",true],[10,"id","invoking-actions"],[10,"class","docs-md__h2"],[8],[7,"a",true],[10,"href","#invoking-actions"],[10,"class","heading-anchor"],[8],[0,"Invoking actions"],[9],[9],[0,"\\n    "],[7,"p",true],[8],[0,"TypeScript won\'t detect a mismatch between this action and the corresponding call in the template:"],[9],[0,"\\n"],[7,"p",true],[8],[4,"docs-snippet",null,[["name","title","showCopy","language"],["my-game.ts","my-app/components/my-game.ts",false,"ts"]],{"statements":[[0,"\\nimport Component from \'@ember/component\';\\nimport { action } from \'@ember-decorators/object\'; export default class MyGame extends Component {\\n  @action\\n  turnWheel(degrees: number) {\\n    // ...\\n  }\\n}\\n"]],"parameters":[]},null],[9],[0,"\\n"],[7,"p",true],[8],[4,"docs-snippet",null,[["name","title","showCopy","language"],["my-game.hbs","my-app/templates/components/my-game.hbs",false,"htmlbars"]],{"statements":[[0,"\\n"],[7,"button",true],[11,"onclick",[28,"action",[[23,0,[]],"turnWheel","NOT-A-NUMBER"],null]],[8],[0,"Click Me"],[9],[0,"\\n"]],"parameters":[]},null],[9],[0,"\\n"],[7,"p",true],[8],[0,"Likewise, it won\'t notice a problem when you use the "],[7,"code",true],[8],[0,"send"],[9],[0," method:"],[9],[0,"\\n"],[7,"p",true],[8],[4,"docs-snippet",null,[["name","title","showCopy","language"],["nested-component.ts","my-app/components/nested-component.ts",false,"ts"]],{"statements":[[0,"\\n// TypeScript compiler won\'t detect this type mismatch\\nthis.send(\'turnWheel\', \'ALSO-NOT-A-NUMBER\');\\n"]],"parameters":[]},null],[9],[9]],"hasEval":false}',meta:{moduleName:"dummy/templates/docs/ts-guide/current-limitations.hbs"}})
e.default=t}),define("dummy/templates/docs/ts-guide/using-ts-effectively",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"Z3QMVgxQ",block:'{"symbols":[],"statements":[[7,"div",true],[10,"class","docs-md"],[8],[7,"h1",true],[10,"id","using-typescript-with-ember-effectively"],[10,"class","docs-md__h1"],[8],[0,"Using TypeScript with Ember effectively"],[9],[0,"\\n    \\n      "],[7,"h2",true],[10,"id","incremental-adoption"],[10,"class","docs-md__h2"],[8],[7,"a",true],[10,"href","#incremental-adoption"],[10,"class","heading-anchor"],[8],[0,"Incremental adoption"],[9],[9],[0,"\\n    "],[7,"p",true],[8],[0,"If you are porting an existing app to TypeScript, you can install this addon and migrate your files incrementally by changing their extensions from "],[7,"code",true],[8],[0,".js"],[9],[0," to "],[7,"code",true],[8],[0,".ts"],[9],[0,". As TypeScript starts to find errors (and it usually does!), make sure to celebrate your wins – even if they\'re small! – with your team, especially if some people are not convinced yet. We would also love to hear your stories!"],[9],[0,"\\n"],[7,"p",true],[8],[0,"Some specific tips for success on the technical front:"],[9],[0,"\\n"],[7,"ul",true],[8],[0,"\\n"],[7,"li",true],[8],[7,"p",true],[8],[0,"Use the "],[7,"em",true],[8],[0,"strictest"],[9],[0," strictness settings that our typings allow. While it may be tempting to start with the "],[7,"em",true],[8],[0,"loosest"],[9],[0," strictness settings and then to tighten them down as you go, this will actually mean that \\"getting your app type-checking\\" will become a repeated process – getting it type-checking with every new strictness setting you enable! – rather than something you do just once. The only strictness setting you should turn "],[7,"em",true],[8],[0,"off"],[9],[0," is "],[7,"code",true],[8],[0,"strictFunctionTypes"],[9],[0,", which our current type definitions do not support. The recommended "],[7,"em",true],[8],[0,"strictness"],[9],[0," settings in your "],[7,"code",true],[8],[0,"\\"compilerOptions\\""],[9],[0," hash:"],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[8],[0,"\\"noImplicitAny\\": true,\\n\\"noImplicitThis\\": true,\\n\\"alwaysStrict\\": true,\\n\\"strictNullChecks\\": true,\\n\\"strictPropertyInitialization\\": true,\\n\\"noFallthroughCasesInSwitch\\": true,\\n\\"noUnusedLocals\\": true,\\n\\"noUnusedParameters\\": true,\\n\\"noImplicitReturns\\": true,"],[9],[9],[9],[0,"\\n"],[7,"li",true],[8],[7,"p",true],[8],[0,"A good approach is to start at your \\"leaf\\" files (the ones that don\'t import anything else from your app, only Ember types) and then work your way back inward toward the most core types that are used everywhere. Often the highest-value modules are your Ember Data models and any core services that are used everywhere else in the app – and those are also the ones that tend to have the most cascading effects (having to update "],[7,"em",true],[8],[0,"tons"],[9],[0," of other places in your app) when you type them later in the process."],[9],[0,"\\n"],[9],[0,"\\n"],[7,"li",true],[8],[7,"p",true],[8],[0,"Set "],[7,"code",true],[8],[0,"\\"noEmitOnError\\": true"],[9],[0," in the "],[7,"code",true],[8],[0,"\\"compilerOptions\\""],[9],[0," hash in your "],[7,"code",true],[8],[0,"tsconfig.json"],[9],[0," – it will help a lot if you can be sure that for the parts of your app you "],[7,"em",true],[8],[0,"have"],[9],[0," added types to are still correct. And you\'ll get nice feedback "],[7,"em",true],[8],[0,"immediately"],[9],[0," when you have type errors that way!"],[9],[0,"\\n"],[7,"p",true],[8],[7,"img",true],[10,"src","https://user-images.githubusercontent.com/108688/38774630-7d9224d4-403b-11e8-8dbc-87dad977a4c4.gif"],[10,"alt","type errors in your build!"],[10,"title","example of a build error during live reload"],[8],[9],[9],[0,"\\n"],[9],[0,"\\n"],[7,"li",true],[8],[7,"p",true],[8],[0,"There are two schools of thought on how to handle things you don\'t have types for as you go:"],[9],[0,"\\n"],[7,"ul",true],[8],[0,"\\n"],[7,"li",true],[8],[7,"p",true],[8],[0,"Liberally use "],[7,"code",true],[8],[0,"any"],[9],[0," for them and come back and fill them in later. This will let you do the strictest strictness settings but with an escape hatch that lets you say \\"We will come back to this when we have more idea how to handle it.\\""],[9],[0,"\\n"],[9],[0,"\\n"],[7,"li",true],[8],[7,"p",true],[8],[0,"Go more slowly, but write down at least minimally accurate types as you go. (This is easier if you follow the leaves-first strategy recommended above.) This is much harder, but allows you to have much higher confidence as you work through the app."],[9],[0,"\\n"],[9],[0,"\\n"],[9],[0,"\\n"],[7,"p",true],[8],[0,"There is an inherent tradeoff between these two approaches; which works best will depend on your team and your app."],[9],[0,"\\n"],[9],[0,"\\n"],[9],[0,"\\n"],[7,"p",true],[8],[0,"You may find the blog series "],[7,"a",true],[10,"href","http://www.chriskrycho.com/typing-your-ember.html"],[10,"class","docs-md__a"],[8],[0,"\\"Typing Your Ember\\""],[9],[0," helpful as it walks you through not only how to install but how to most effectively use TypeScript in an Ember app today, and gives some important info on the background and roadmap for the project."],[9],[0,"\\n\\n      "],[7,"h2",true],[10,"id","install-other-types-"],[10,"class","docs-md__h2"],[8],[7,"a",true],[10,"href","#install-other-types-"],[10,"class","heading-anchor"],[8],[0,"Install other types!"],[9],[9],[0,"\\n    "],[7,"p",true],[8],[0,"You\'ll want to use other type definitions as much as possible. The first thing you should do, for example, is install the types for your testing framework of choice: "],[7,"code",true],[8],[0,"@types/ember-mocha"],[9],[0," or "],[7,"code",true],[8],[0,"@types/ember-qunit"],[9],[0,". Beyond that, look for types from other addons: it will mean writing "],[7,"code",true],[8],[0,"any"],[9],[0," a lot less and getting a lot more help both from your editor and from the compiler."],[9],[0,"\\n"],[7,"p",true],[8],[7,"em",true],[8],[0,"Where can I find types?"],[9],[0," Some addons will ship them with their packages, and work out of the box. For others, you can search for them on "],[7,"a",true],[10,"href","https://github.com/DefinitelyTyped/DefinitelyTyped"],[10,"class","docs-md__a"],[8],[0,"Definitely Typed"],[9],[0,", or on npm under the "],[7,"code",true],[8],[0,"@types"],[9],[0," namespace. (In the future we hope to maintain a list of known types; keep your eyes open!)"],[9],[0,"\\n\\n      "],[7,"h2",true],[10,"id","the-types-directory"],[10,"class","docs-md__h2"],[8],[7,"a",true],[10,"href","#the-types-directory"],[10,"class","heading-anchor"],[8],[0,"The "],[7,"code",true],[8],[0,"types"],[9],[0," directory"],[9],[9],[0,"\\n    "],[7,"p",true],[8],[0,"During installation, we create a "],[7,"code",true],[8],[0,"types"],[9],[0," directory in the root of your application and add a "],[7,"code",true],[8],[0,"\\"paths\\""],[9],[0," mapping that includes that directory in any type lookups TypeScript tries to do. This is convenient for a few things:"],[9],[0,"\\n"],[7,"ul",true],[8],[0,"\\n"],[7,"li",true],[8],[0,"global types for your package (see the next section)"],[9],[0,"\\n"],[7,"li",true],[8],[0,"writing types for third-party/"],[7,"code",true],[8],[0,"vendor"],[9],[0," packages which do not have any types"],[9],[0,"\\n"],[7,"li",true],[8],[0,"developing types for an addon which you intend to upstream later"],[9],[0,"\\n"],[9],[0,"\\n"],[7,"p",true],[8],[0,"These are all fallbacks, of course, you should use the types supplied directly with a package"],[9],[0,"\\n\\n      "],[7,"h3",true],[10,"id","global-types-for-your-package"],[10,"class","docs-md__h3"],[8],[7,"a",true],[10,"href","#global-types-for-your-package"],[10,"class","heading-anchor"],[8],[0,"Global types for your package"],[9],[9],[0,"\\n    "],[7,"p",true],[8],[0,"At the root of your application or addon, we include a "],[7,"code",true],[8],[0,"types/<your app>"],[9],[0," directory with an "],[7,"code",true],[8],[0,"index.d.ts"],[9],[0," file in it. Anything which is part of your application but which must be declared globally can go in this file. For example, if you have data attached to the "],[7,"code",true],[8],[0,"Window"],[9],[0," object when the page is loaded (for bootstrapping or whatever other reason), this is a good place to declare it."],[9],[0,"\\n"],[7,"p",true],[8],[0,"In the case of applications (but not for addons), we also automatically include declarations for Ember\'s prototype extensions in this "],[7,"code",true],[8],[0,"index.d.ts"],[9],[0," file, with the "],[7,"code",true],[8],[0,"Array"],[9],[0," prototype extensions enabled and the "],[7,"code",true],[8],[0,"Function"],[9],[0," prototype extensions commented out. You should configure them to match your own config (which we cannot check during installation). If you are "],[7,"a",true],[10,"href","https://guides.emberjs.com/v2.18.0/configuring-ember/disabling-prototype-extensions/"],[10,"class","docs-md__a"],[8],[0,"disabling Ember\'s prototype extensions"],[9],[0,", you can remove these declarations entirely; we include them because they\'re enabled in most Ember applications today."],[9],[0,"\\n\\n      "],[7,"h3",true],[10,"id","environment-configuration-typings"],[10,"class","docs-md__h3"],[8],[7,"a",true],[10,"href","#environment-configuration-typings"],[10,"class","heading-anchor"],[8],[0,"Environment configuration typings"],[9],[9],[0,"\\n    "],[7,"p",true],[8],[0,"Along with the @types/ files mentioned above, ember-cli-typescript adds a starter interface for "],[7,"code",true],[8],[0,"config/environment.js"],[9],[0," in "],[7,"code",true],[8],[0,"app/config/environment.d.ts"],[9],[0,". This interface will likely require some changes to match your app."],[9],[0,"\\n"],[7,"p",true],[8],[0,"We install this file because the actual "],[7,"code",true],[8],[0,"config/environment.js"],[9],[0," is (a) not actually identical with the types as you inherit them in the content of an application, but rather a superset of what an application has access to, and (b) not in a the same location as the path at which you look it up. The actual "],[7,"code",true],[8],[0,"config/environment.js"],[9],[0," file executes in Node during the build, and Ember CLI writes its result as "],[7,"code",true],[8],[0,"<my-app>/config/environment"],[9],[0," into your build for consumption at runtime."],[9],[0,"\\n\\n      "],[7,"h2",true],[10,"id","string-keyed-lookups"],[10,"class","docs-md__h2"],[8],[7,"a",true],[10,"href","#string-keyed-lookups"],[10,"class","heading-anchor"],[8],[0,"String-keyed lookups"],[9],[9],[0,"\\n    "],[7,"p",true],[8],[0,"Ember makes heavy use of string-based APIs to allow for a high degree of dynamicism. With some limitations, you can nonetheless use TypeScript very effectively to get auto-complete/IntelliSense as well as to accurately type-check your applications."],[9],[0,"\\n"],[7,"p",true],[8],[0,"The \\"Update\\" sequence in the Typing Your Ember has detailed explanations and guides for getting good type-safety for Ember\'s string-based APIs, e.g. the use of "],[7,"code",true],[8],[0,"get"],[9],[0," and "],[7,"code",true],[8],[0,"set"],[9],[0,", service and controller injection, Ember Data models and lookups"],[9],[0,"\\n"],[7,"ul",true],[8],[0,"\\n"],[7,"li",true],[8],[7,"a",true],[10,"href","http://www.chriskrycho.com/2018/typing-your-ember-update-part-1.html"],[10,"class","docs-md__a"],[8],[0,"Part 1"],[9],[0,": A look at normal Ember objects, \\"arguments\\" to components (and controllers), and service (or controller) injections."],[9],[0,"\\n"],[7,"li",true],[8],[7,"a",true],[10,"href","http://www.chriskrycho.com/2018/typing-your-ember-update-part-2.html"],[10,"class","docs-md__a"],[8],[0,"Part 2"],[9],[0,": Class properties — some notes on how things differ from the "],[7,"code",true],[8],[0,"Ember.Object"],[9],[0," world."],[9],[0,"\\n"],[7,"li",true],[8],[7,"a",true],[10,"href","http://www.chriskrycho.com/2018/typing-your-ember-update-part-3.html"],[10,"class","docs-md__a"],[8],[0,"Part 3"],[9],[0,": Computed properties, actions, mixins, and class methods."],[9],[0,"\\n"],[7,"li",true],[8],[7,"a",true],[10,"href","http://www.chriskrycho.com/2018/typing-your-ember-update-part-4.html"],[10,"class","docs-md__a"],[8],[0,"Part 4"],[9],[0,": Using Ember Data, and service and controller injections improvements. (This includes a detailed guide to updating making the service and controller injections and Ember Data lookups behave as described below.)"],[9],[0,"\\n"],[9],[0,"\\n"],[7,"p",true],[8],[0,"A few of the most common speed-bumps are listed here to help make this easier:"],[9],[0,"\\n\\n      "],[7,"h3",true],[10,"id","this-type-workaround"],[10,"class","docs-md__h3"],[8],[7,"a",true],[10,"href","#this-type-workaround"],[10,"class","heading-anchor"],[8],[7,"code",true],[8],[0,"this"],[9],[0," type workaround"],[9],[9],[0,"\\n    "],[7,"p",true],[8],[0,"One important note for using "],[7,"code",true],[8],[0,"class"],[9],[0," types effectively with today\'s Ember typings: you will (at least for now) need to explicitly write out a "],[7,"code",true],[8],[0,"this"],[9],[0," type for methods, computed property callbacks, and actions if you are going to use "],[7,"code",true],[8],[0,"get"],[9],[0," or "],[7,"code",true],[8],[0,"set"],[9],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedts"],[8],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"import"],[9],[0," Component "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"from"],[9],[0," "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\'@ember/component\'"],[9],[0,";\\n\\n"],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"export"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"default"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"class"],[9],[0," UserProfile "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"extends"],[9],[0," Component {\\n  changeUsername("],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"this"],[9],[0,": UserProfile, userName: "],[7,"span",true],[10,"class","hljs-built_in"],[8],[0,"string"],[9],[0,") {\\n    "],[7,"span",true],[10,"class","hljs-comment"],[8],[0,"//           ^---------------^"],[9],[0,"\\n    "],[7,"span",true],[10,"class","hljs-comment"],[8],[0,"// `this` tells TS to use `UserProfile` for `get` and `set` lookups"],[9],[0,"\\n  }\\n}"],[9],[9],[0,"\\n"],[7,"p",true],[8],[0,"This is a workaround for how incredibly dynamic "],[7,"code",true],[8],[0,"Ember.Object"],[9],[0," instances are and hopefully will improve over time as we continue to iterate on the type definitions. Again, see "],[7,"a",true],[10,"href","http://www.chriskrycho.com/2018/typing-your-ember-update-part-2.html"],[10,"class","docs-md__a"],[8],[0,"the relevant blog post for details"],[9],[0,"."],[9],[0,"\\n\\n      "],[7,"h3",true],[10,"id","nested-keys-in-get-or-set"],[10,"class","docs-md__h3"],[8],[7,"a",true],[10,"href","#nested-keys-in-get-or-set"],[10,"class","heading-anchor"],[8],[0,"Nested keys in "],[7,"code",true],[8],[0,"get"],[9],[0," or "],[7,"code",true],[8],[0,"set"],[9],[9],[9],[0,"\\n    "],[7,"p",true],[8],[0,"In general, "],[7,"code",true],[8],[0,"this.get"],[9],[0," and "],[7,"code",true],[8],[0,"this.set"],[9],[0," will work as you\'d expect "],[7,"em",true],[8],[0,"if"],[9],[0," you\'re doing lookups only a single layer deep. Things like "],[7,"code",true],[8],[0,"this.get(\'a.b.c\')"],[9],[0," don\'t (and can\'t ever!) type-check; see the blog posts for a more detailed discussion of why."],[9],[0,"\\n"],[7,"p",true],[8],[0,"The workaround is simply to do one of two things:"],[9],[0,"\\n"],[7,"ol",true],[8],[0,"\\n"],[7,"li",true],[8],[7,"p",true],[8],[7,"strong",true],[8],[0,"The type-safe approach."],[9],[0," This "],[7,"em",true],[8],[0,"will"],[9],[0," typecheck, but is both ugly and only works *if there are no "],[7,"code",true],[8],[0,"null"],[9],[0,"s or "],[7,"code",true],[8],[0,"undefined"],[9],[0,"s along the way. If "],[7,"code",true],[8],[0,"nested"],[9],[0," is "],[7,"code",true],[8],[0,"null"],[9],[0," at runtime, this will crash!"],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedts"],[8],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"import"],[9],[0," { "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"get"],[9],[0," } "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"from"],[9],[0," "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\'@ember/object\'"],[9],[0,";\\n\\n"],[7,"span",true],[10,"class","hljs-comment"],[8],[0,"// -- Type-safe but ugly --//"],[9],[0,"\\n"],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"get"],[9],[0,"("],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"get"],[9],[0,"("],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"get"],[9],[0,"(someObject, "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\'deeply\'"],[9],[0,"), "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\'nested\'"],[9],[0,"), "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\'key\'"],[9],[0,");"],[9],[9],[0,"\\n"],[9],[0,"\\n"],[7,"li",true],[8],[7,"p",true],[8],[7,"strong",true],[8],[0,"Using "],[7,"code",true],[8],[0,"// @ts-ignore"],[9],[0,"."],[9],[0," This will "],[7,"em",true],[8],[0,"not do any type-checking"],[9],[0,", but is useful for the cases where you are intentionally checking a path which may be "],[7,"code",true],[8],[0,"null"],[9],[0," or "],[7,"code",true],[8],[0,"undefined"],[9],[0," anywhere long it."],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedts"],[8],[7,"span",true],[10,"class","hljs-comment"],[8],[0,"// @ts-ignore"],[9],[0,"\\n"],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"get"],[9],[0,"(someObject, "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\'deeply.nested.key\'"],[9],[0,");"],[9],[9],[0,"\\n"],[7,"p",true],[8],[0,"It\'s usually best to include an explanation of "],[7,"em",true],[8],[0,"why"],[9],[0," you\'re ignoring a lookup!"],[9],[0,"\\n"],[9],[0,"\\n"],[9],[0,"\\n\\n      "],[7,"h3",true],[10,"id","service-and-controller-injections"],[10,"class","docs-md__h3"],[8],[7,"a",true],[10,"href","#service-and-controller-injections"],[10,"class","heading-anchor"],[8],[0,"Service and controller injections"],[9],[9],[0,"\\n    "],[7,"p",true],[8],[0,"Ember does service and controller lookups with the "],[7,"code",true],[8],[0,"inject"],[9],[0," functions at runtime, using the name of the service or controller being injected up as the default value—a clever bit of metaprogramming that makes for a nice developer experience. TypeScript cannot do this, because the name of the service or controller to inject isn\'t available at compile time in the same way."],[9],[0,"\\n"],[7,"p",true],[8],[0,"The officially supported method for injections with TypeScript uses "],[7,"em",true],[8],[0,"decorators"],[9],[0,", from the ember-decorators package (and soon in Ember itself)."],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedts"],[8],[7,"span",true],[10,"class","hljs-comment"],[8],[0,"// my-app/services/my-session.ts"],[9],[0,"\\n"],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"import"],[9],[0," Service "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"from"],[9],[0," "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\'@ember/service\'"],[9],[0,";\\n"],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"import"],[9],[0," RSVP "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"from"],[9],[0," "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\'rsvp\'"],[9],[0,";\\n\\n"],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"export"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"default"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"class"],[9],[0," MySession "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"extends"],[9],[0," Service {\\n  login(email: "],[7,"span",true],[10,"class","hljs-built_in"],[8],[0,"string"],[9],[0,", password: "],[7,"span",true],[10,"class","hljs-built_in"],[8],[0,"string"],[9],[0,"): RSVP.Promise<"],[7,"span",true],[10,"class","hljs-built_in"],[8],[0,"string"],[9],[0,"> {\\n    "],[7,"span",true],[10,"class","hljs-comment"],[8],[0,"// login and return the confirmation message"],[9],[0,"\\n  }\\n}\\n\\n"],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"declare"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"module"],[9],[0," \'@ember/service\' {\\n  "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"interface"],[9],[0," Registry {\\n    "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\'my-session\'"],[9],[0,": MySession;\\n  }\\n}"],[9],[9],[0,"\\n"],[7,"p",true],[8],[0,"Then we can use the service as we usually would with a decorator, but adding a type annotation to it so TypeScript knows what it\'s looking at:"],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedts"],[8],[7,"span",true],[10,"class","hljs-comment"],[8],[0,"// my-app/components/user-profile.ts"],[9],[0,"\\n"],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"import"],[9],[0," Component "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"from"],[9],[0," "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\'@ember/component\'"],[9],[0,";\\n"],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"import"],[9],[0," { service } "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"from"],[9],[0," "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\'@ember-decorators/service\'"],[9],[0,";\\n\\n"],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"import"],[9],[0," MySession "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"from"],[9],[0," "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\'my-app/services/my-session\'"],[9],[0,";\\n\\n"],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"export"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"default"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"class"],[9],[0," UserProfile "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"extends"],[9],[0," Component {\\n  "],[7,"span",true],[10,"class","hljs-meta"],[8],[0,"@service"],[9],[0," mySession!: MySession;\\n\\n  login(email: "],[7,"span",true],[10,"class","hljs-built_in"],[8],[0,"string"],[9],[0,", password: "],[7,"span",true],[10,"class","hljs-built_in"],[8],[0,"string"],[9],[0,") {\\n    "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"this"],[9],[0,".session.login(email, password);\\n  }\\n}"],[9],[9],[0,"\\n"],[7,"p",true],[8],[0,"Note that we need the "],[7,"code",true],[8],[0,"MySession"],[9],[0," type annotation this way, but we "],[7,"em",true],[8],[0,"don\'t"],[9],[0," need the string lookup (unless we\'re giving the service a different name than the usual on the class, as in Ember injections in general). Without the type annotation, the type of "],[7,"code",true],[8],[0,"session"],[9],[0," would just be "],[7,"code",true],[8],[0,"any"],[9],[0,". This is because decorators are not allowed to modify the types of whatever they decorate. As a result, we wouldn\'t get any type-checking on that "],[7,"code",true],[8],[0,"session.login"],[9],[0," call, and we wouldn\'t get any auto-completion either. Which would be really sad and take away a lot of the reason we\'re using TypeScript in the first place!"],[9],[0,"\\n"],[7,"p",true],[8],[0,"Also notice the "],[7,"a",true],[10,"href","https://github.com/Microsoft/TypeScript/wiki/What\'s-new-in-TypeScript#non-null-assertion-operator"],[10,"class","docs-md__a"],[8],[7,"code",true],[8],[0,"!"],[9],[0," non-null assertion operator"],[9],[0,", which is required to prevent "],[7,"a",true],[10,"href","https://github.com/kaorun343/vue-property-decorator/issues/81"],[10,"class","docs-md__a"],[8],[7,"code",true],[8],[0,"TS2564"],[9],[9],[0,", that is caused by enabling "],[7,"code",true],[8],[0,"strictPropertyInitialization"],[9],[0," in "],[7,"code",true],[8],[0,"tsconfig.json"],[9],[0,"."],[9],[0,"\\n"],[7,"p",true],[8],[0,"This also holds true for all other macros of the ember-decorators addon."],[9],[0,"\\n\\n      "],[7,"h3",true],[10,"id","earlier-ember-versions"],[10,"class","docs-md__h3"],[8],[7,"a",true],[10,"href","#earlier-ember-versions"],[10,"class","heading-anchor"],[8],[0,"Earlier Ember versions"],[9],[9],[0,"\\n    "],[7,"p",true],[8],[0,"A couple notes for consumers on earlier Ember versions:"],[9],[0,"\\n"],[7,"p",true],[8],[0,"On Ember versions "],[7,"strong",true],[8],[0,"earlier than 3.1"],[9],[0,", you\'ll want to wrap your service type in "],[7,"a",true],[10,"href","https://www.emberjs.com/api/ember/release/classes/ComputedProperty"],[10,"class","docs-md__a"],[8],[7,"code",true],[8],[0,"ComputedProperty"],[9],[9],[0,", because "],[7,"a",true],[10,"href","https://github.com/emberjs/rfcs/blob/master/text/0281-es5-getters.md"],[10,"class","docs-md__a"],[8],[0,"native ES5 getters"],[9],[0," are not available there, which means that instead of accessing the service via "],[7,"code",true],[8],[0,"this.mySession"],[9],[0,", you would have to access it as "],[7,"code",true],[8],[0,"this.get(\'mySession\')"],[9],[0," or "],[7,"code",true],[8],[0,"get(this, \'mySession\')"],[9],[0,"."],[9],[0,"\\n"],[7,"p",true],[8],[0,"On Ember versions "],[7,"strong",true],[8],[0,"earlier than 3.6"],[9],[0,", you may encounter problems when providing type definitions like this:"],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedts"],[8],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"import"],[9],[0," Component "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"from"],[9],[0," "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\'@ember/component\'"],[9],[0,";\\n\\n"],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"export"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"default"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"class"],[9],[0," UserProfile "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"extends"],[9],[0," Component {\\n  username?: "],[7,"span",true],[10,"class","hljs-built_in"],[8],[0,"string"],[9],[0,";\\n}"],[9],[9],[0,"\\n"],[7,"p",true],[8],[0,"When invoked via a template "],[7,"code",true],[8],[0,"{{user-profile username=\'example123\'}}"],[9],[0,", you would expect that "],[7,"code",true],[8],[0,"username"],[9],[0," would have the value of "],[7,"code",true],[8],[0,"example123"],[9],[0,", however prior to the native class feature released in Ember "],[7,"code",true],[8],[0,"3.6"],[9],[0,", this will result in "],[7,"code",true],[8],[0,"username"],[9],[0," being undefined.  "],[9],[0,"\\n"],[7,"p",true],[8],[0,"For users who remain on Ember versions below "],[7,"code",true],[8],[0,"3.6"],[9],[0,", please use https://github.com/pzuraq/ember-native-class-polyfill "],[9],[0,"\\n\\n      "],[7,"h3",true],[10,"id","ember-data-lookups"],[10,"class","docs-md__h3"],[8],[7,"a",true],[10,"href","#ember-data-lookups"],[10,"class","heading-anchor"],[8],[0,"Ember Data lookups"],[9],[9],[0,"\\n    "],[7,"p",true],[8],[0,"We use the same basic approach for Ember Data type lookups with string keys as we do for service or controller injections. As a result, once you add the module and interface definitions for each model, serializer, and adapter in your app, you will automatically get type-checking and autocompletion and the correct return types for functions like "],[7,"code",true],[8],[0,"findRecord"],[9],[0,", "],[7,"code",true],[8],[0,"queryRecord"],[9],[0,", "],[7,"code",true],[8],[0,"adapterFor"],[9],[0,", "],[7,"code",true],[8],[0,"serializerFor"],[9],[0,", etc. No need to try to write out those (admittedly kind of hairy!) types; just write your Ember Data calls like normal and everything "],[7,"em",true],[8],[0,"should"],[9],[0," just work."],[9],[0,"\\n"],[7,"p",true],[8],[0,"The declarations and changes you need to add to your existing files are:"],[9],[0,"\\n"],[7,"ul",true],[8],[0,"\\n"],[7,"li",true],[8],[7,"p",true],[8],[0,"Models"],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedts"],[8],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"import"],[9],[0," DS "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"from"],[9],[0," "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\'ember-data\'"],[9],[0,";\\n\\n"],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"export"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"default"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"class"],[9],[0," UserMeta "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"extends"],[9],[0," DS.Model.extend({\\n  "],[7,"span",true],[10,"class","hljs-comment"],[8],[0,"// attribute declarations here, as usual"],[9],[0,"\\n}) {}\\n\\n"],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"declare"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"module"],[9],[0," \'ember-data/types/registries/model\' {\\n  "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"export"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"default"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"interface"],[9],[0," ModelRegistry {\\n    "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\'user-meta\'"],[9],[0,": UserMeta;\\n  }\\n}"],[9],[9],[0,"\\n"],[9],[0,"\\n"],[7,"li",true],[8],[7,"p",true],[8],[0,"Adapters"],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedts"],[8],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"import"],[9],[0," DS "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"from"],[9],[0," "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\'ember-data\'"],[9],[0,";\\n\\n"],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"export"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"default"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"class"],[9],[0," UserMeta "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"extends"],[9],[0," DS.Adapter {\\n  "],[7,"span",true],[10,"class","hljs-comment"],[8],[0,"// properties and methods"],[9],[0,"\\n}\\n\\n"],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"declare"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"module"],[9],[0," \'ember-data/types/registries/adapter\' {\\n  "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"export"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"default"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"interface"],[9],[0," AdapterRegistry {\\n    "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\'user-meta\'"],[9],[0,": UserMeta;\\n  }\\n}"],[9],[9],[0,"\\n"],[9],[0,"\\n"],[7,"li",true],[8],[7,"p",true],[8],[0,"Serializers"],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedts"],[8],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"import"],[9],[0," DS "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"from"],[9],[0," "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\'ember-data\'"],[9],[0,";\\n\\n"],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"export"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"default"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"class"],[9],[0," UserMeta "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"extends"],[9],[0," DS.Serializer {\\n  "],[7,"span",true],[10,"class","hljs-comment"],[8],[0,"// properties and methods"],[9],[0,"\\n}\\n\\n"],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"declare"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"module"],[9],[0," \'ember-data/types/registries/serializer\' {\\n  "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"export"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"default"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"interface"],[9],[0," SerializerRegistry {\\n    "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\'user-meta\'"],[9],[0,": UserMeta;\\n  }\\n}"],[9],[9],[0,"\\n"],[9],[0,"\\n"],[7,"li",true],[8],[7,"p",true],[8],[0,"Transforms"],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedts"],[8],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"import"],[9],[0," DS "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"from"],[9],[0," "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\'ember-data\'"],[9],[0,";\\n\\n"],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"export"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"default"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"class"],[9],[0," ColorTransform "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"extends"],[9],[0," DS.Transform {\\n  "],[7,"span",true],[10,"class","hljs-comment"],[8],[0,"// properties and methods"],[9],[0,"\\n}\\n\\n"],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"declare"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"module"],[9],[0," \'ember-data/types/registries/transform\' {\\n  "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"export"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"default"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"interface"],[9],[0," TransformRegistry {\\n    color: ColorTransform;\\n  }\\n}"],[9],[9],[0,"\\n"],[9],[0,"\\n"],[9],[0,"\\n"],[7,"p",true],[8],[0,"In addition to the registry, note the oddly defined class for "],[7,"code",true],[8],[0,"DS.Model"],[9],[0,"s. This is because we need to set up the attribute bindings on the prototype (for a discussion of how and why this is different from class properties, see "],[7,"a",true],[10,"href","http://www.chriskrycho.com/2018/typing-your-ember-update-part-2.html"],[10,"class","docs-md__a"],[8],[0,"Typing Your Ember, Update, Part 2"],[9],[0,"), but we cannot just use a "],[7,"code",true],[8],[0,"const"],[9],[0," here because we need a named type—like a class!—to reference in the type registry and elsewhere in the app."],[9],[0,"\\n\\n      "],[7,"h4",true],[10,"id","opt-in-unsafety"],[10,"class","docs-md__h4"],[8],[7,"a",true],[10,"href","#opt-in-unsafety"],[10,"class","heading-anchor"],[8],[0,"Opt-in unsafety"],[9],[9],[0,"\\n    "],[7,"p",true],[8],[0,"Also notice that unlike with service and controller injections, there is no unsafe fallback method by default, because there isn\'t an argument-less variant of the functions to use as there is for "],[7,"code",true],[8],[0,"Service"],[9],[0," and "],[7,"code",true],[8],[0,"Controller"],[9],[0," injection. If for some reason you want to opt "],[7,"em",true],[8],[0,"out"],[9],[0," of the full type-safe lookup for the strings you pass into methods like "],[7,"code",true],[8],[0,"findRecord"],[9],[0,", "],[7,"code",true],[8],[0,"adapterFor"],[9],[0,", and "],[7,"code",true],[8],[0,"serializerFor"],[9],[0,", you can add these declarations somewhere in your project:"],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedts"],[8],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"import"],[9],[0," DS "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"from"],[9],[0," "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\'ember-data\'"],[9],[0,";\\n\\n"],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"declare"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"module"],[9],[0," \'ember-data/types/registries/model\' {\\n  "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"export"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"default"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"interface"],[9],[0," ModelRegistry {\\n    [key: "],[7,"span",true],[10,"class","hljs-built_in"],[8],[0,"string"],[9],[0,"]: DS.Model;\\n  }\\n}\\n"],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"declare"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"module"],[9],[0," \'ember-data/types/registries/adapter\' {\\n  "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"export"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"default"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"interface"],[9],[0," AdapterRegistry {\\n    [key: "],[7,"span",true],[10,"class","hljs-built_in"],[8],[0,"string"],[9],[0,"]: DS.Adapter;\\n  }\\n}\\n"],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"declare"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"module"],[9],[0," \'ember-data/types/registries/serializer\' {\\n  "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"export"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"default"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"interface"],[9],[0," SerializerRegistry {\\n    [key: "],[7,"span",true],[10,"class","hljs-built_in"],[8],[0,"string"],[9],[0,"]: DS.Serializer;\\n  }\\n}"],[9],[9],[0,"\\n"],[7,"p",true],[8],[0,"However, we "],[7,"strong",true],[8],[7,"em",true],[8],[0,"strongly"],[9],[9],[0," recommend that you simply take the time to add the few lines of declarations to each of your "],[7,"code",true],[8],[0,"DS.Model"],[9],[0,", "],[7,"code",true],[8],[0,"DS.Adapter"],[9],[0,", and "],[7,"code",true],[8],[0,"DS.Serializer"],[9],[0," instances instead. It will save you time in even the short run!"],[9],[0,"\\n\\n      "],[7,"h4",true],[10,"id","fixing-the-ember-data-error-ts2344-problem"],[10,"class","docs-md__h4"],[8],[7,"a",true],[10,"href","#fixing-the-ember-data-error-ts2344-problem"],[10,"class","heading-anchor"],[8],[0,"Fixing the Ember Data "],[7,"code",true],[8],[0,"error TS2344"],[9],[0," problem"],[9],[9],[0,"\\n    "],[7,"p",true],[8],[0,"If you\'re developing an Ember app or addon and "],[7,"em",true],[8],[0,"not"],[9],[0," using Ember Data (and accordingly not even have the Ember Data types installed), you may see an error like this and be confused:"],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[8],[0,"node_modules/@types/ember-data/index.d.ts(920,56): error TS2344: Type \'any\' does not satisfy the constraint \'never\'."],[9],[9],[7,"p",true],[8],[0,"This happens because the types for Ember\'s "],[7,"em",true],[8],[0,"test"],[9],[0," tooling includes the types for Ember Data because the "],[7,"code",true],[8],[0,"this"],[9],[0," value in several of Ember\'s test types can include a reference to "],[7,"code",true],[8],[0,"DS.Store"],[9],[0,"."],[9],[0,"\\n"],[7,"p",true],[8],[7,"strong",true],[8],[0,"The fix:"],[9],[0," add a declaration like this in a new file named "],[7,"code",true],[8],[0,"ember-data.d.ts"],[9],[0," in your "],[7,"code",true],[8],[0,"types"],[9],[0," directory:"],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedts"],[8],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"declare"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"module"],[9],[0," \'ember-data/types/registries/model\' {\\n  "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"export"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"default"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"interface"],[9],[0," ModelRegistry {\\n    [key: "],[7,"span",true],[10,"class","hljs-built_in"],[8],[0,"string"],[9],[0,"]: "],[7,"span",true],[10,"class","hljs-built_in"],[8],[0,"any"],[9],[0,";\\n  }\\n}"],[9],[9],[0,"\\n"],[7,"p",true],[8],[0,"This works because (a) we include things in your types directory automatically and (b) TypeScript will merge this module and interface declaration with the main definitions for Ember Data from DefinitelyTyped behind the scenes."],[9],[0,"\\n"],[7,"p",true],[8],[0,"If you\'re developing an addon and concerned that this might affect consumers, it won\'t. Your types directory will never be referenced by consumers at all!"],[9],[0,"\\n\\n      "],[7,"h3",true],[10,"id","class-property-setup-errors"],[10,"class","docs-md__h3"],[8],[7,"a",true],[10,"href","#class-property-setup-errors"],[10,"class","heading-anchor"],[8],[0,"Class property setup errors"],[9],[9],[0,"\\n    "],[7,"p",true],[8],[0,"Some common stumbling blocks for people switching to ES6 classes from the traditional EmberObject setup:"],[9],[0,"\\n"],[7,"ul",true],[8],[0,"\\n"],[7,"li",true],[8],[7,"p",true],[8],[7,"code",true],[8],[0,"Assertion Failed: InjectedProperties should be defined with the inject computed property macros."],[9],[0," – You\'ve written "],[7,"code",true],[8],[0,"someService = inject()"],[9],[0," in an ES6 class body in Ember 3.1+. Replace it with the "],[7,"code",true],[8],[0,".extend"],[9],[0," approach or by using decorators ("],[7,"code",true],[8],[0,"@service"],[9],[0," or "],[7,"code",true],[8],[0,"@controller"],[9],[0,") as discussed "],[7,"a",true],[10,"href","#service-and-controller-injections"],[10,"class","docs-md__a"],[8],[0,"above"],[9],[0,". Because computed properties of all sorts, including injections, must be set up on a prototype, "],[7,"em",true],[8],[0,"not"],[9],[0," on an instance, if you try to use class properties to set up injections, computed properties, the action hash, and so on, you will see this error."],[9],[0,"\\n"],[9],[0,"\\n"],[7,"li",true],[8],[7,"p",true],[8],[7,"code",true],[8],[0,"Assertion Failed: Attempting to lookup an injected property on an object without a container, ensure that the object was instantiated via a container."],[9],[0," – You failed to pass "],[7,"code",true],[8],[0,"...arguments"],[9],[0," when you called "],[7,"code",true],[8],[0,"super"],[9],[0," in e.g. a component class "],[7,"code",true],[8],[0,"constructor"],[9],[0,". Always do "],[7,"code",true],[8],[0,"super(...arguments)"],[9],[0,", not just "],[7,"code",true],[8],[0,"super()"],[9],[0,", in your "],[7,"code",true],[8],[0,"constructor"],[9],[0,"."],[9],[0,"\\n"],[9],[0,"\\n"],[9],[0,"\\n\\n      "],[7,"h2",true],[10,"id","type-definitions-outside-node_modules-types"],[10,"class","docs-md__h2"],[8],[7,"a",true],[10,"href","#type-definitions-outside-node_modules-types"],[10,"class","heading-anchor"],[8],[0,"Type definitions outside "],[7,"code",true],[8],[0,"node_modules/@types"],[9],[9],[9],[0,"\\n    "],[7,"p",true],[8],[0,"By default, the TypeScript compiler loads all type definitions found in "],[7,"code",true],[8],[0,"node_modules/@types"],[9],[0,". If the type defs you need are not found there and are not supplied in the root of the package you\'re referencing, you can register a custom value in "],[7,"code",true],[8],[0,"paths"],[9],[0," in the "],[7,"code",true],[8],[0,"tsconfig.json"],[9],[0," file. For example, if you\'re using "],[7,"a",true],[10,"href","https://github.com/ef4/ember-browserify"],[10,"class","docs-md__a"],[8],[0,"ember-browserify"],[9],[0,", you\'re used to writing imports like this:"],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedjs"],[8],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"import"],[9],[0," MyModule "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"from"],[9],[0," "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\'npm:my-module\'"],[9],[0,";"],[9],[9],[0,"\\n"],[7,"p",true],[8],[0,"If "],[7,"code",true],[8],[0,"my-module"],[9],[0," has types, you will not be able to resolve them this way by default. You can add a simple tweak to your "],[7,"code",true],[8],[0,"tsconfig.json"],[9],[0," to resolve the types correctly, however, mapping "],[7,"code",true],[8],[0,"npm:*"],[9],[0," to "],[7,"code",true],[8],[0,"node_modules/*"],[9],[0,"."],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedjson"],[8],[0,"{\\n  "],[7,"span",true],[10,"class","hljs-attr"],[8],[0,"\\"compilerOptions\\""],[9],[0,": {\\n    "],[7,"span",true],[10,"class","hljs-attr"],[8],[0,"\\"paths\\""],[9],[0,": {\\n      "],[7,"span",true],[10,"class","hljs-attr"],[8],[0,"\\"my-app-name/*\\""],[9],[0,": ["],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\\"app/*\\""],[9],[0,"],\\n      "],[7,"span",true],[10,"class","hljs-attr"],[8],[0,"\\"npm:*\\""],[9],[0,": ["],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\\"node_modules/*\\""],[9],[0,"]\\n    }\\n  }\\n}"],[9],[9],[0,"\\n\\n      "],[7,"h2",true],[10,"id","ember-cli-mirage"],[10,"class","docs-md__h2"],[8],[7,"a",true],[10,"href","#ember-cli-mirage"],[10,"class","heading-anchor"],[8],[0,"ember-cli-mirage"],[9],[9],[0,"\\n    "],[7,"p",true],[8],[0,"Mirage adds files from a nonstandard location to your application tree, so you\'ll need to tell the TypeScript compiler about how that layout works."],[9],[0,"\\n"],[7,"p",true],[8],[0,"For an app, this should look roughly like:"],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedjs"],[8],[0,"{\\n  "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\\"compilerOptions\\""],[9],[0,": {\\n    "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\\"paths\\""],[9],[0,": {\\n      "],[7,"span",true],[10,"class","hljs-comment"],[8],[0,"// ..."],[9],[0,"\\n      "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\\"my-app-name/mirage/*\\""],[9],[0,": "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\\"mirage/*\\""],[9],[0,",\\n    }\\n  },\\n  "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\\"include\\""],[9],[0,": [\\n    "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\\"app\\""],[9],[0,",\\n    "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\\"tests\\""],[9],[0,",\\n    "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\\"mirage\\""],[9],[0,"\\n  ]\\n}"],[9],[9],[0,"\\n"],[7,"p",true],[8],[0,"And for an addon:"],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedjs"],[8],[0,"{\\n  "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\\"compilerOptions\\""],[9],[0,": {\\n    "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\\"paths\\""],[9],[0,": {\\n      "],[7,"span",true],[10,"class","hljs-comment"],[8],[0,"// ..."],[9],[0,"\\n      "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\\"dummy/mirage/*\\""],[9],[0,": "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\\"tests/dummy/mirage/*\\""],[9],[0,",\\n    }\\n  },\\n  "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\\"include\\""],[9],[0,": [\\n    "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\\"addon\\""],[9],[0,",\\n    "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\\"tests\\""],[9],[0,"\\n  ]\\n}"],[9],[9],[0,"\\n"],[7,"p",true],[8],[0,"Note that if Mirage was present when you installed ember-cli-typescript (or if you run "],[7,"code",true],[8],[0,"ember g ember-cli-typescript"],[9],[0,"), this configuration should be automatically set up for you."],[9],[0,"\\n\\n      "],[7,"h2",true],[10,"id","-typescript-is-complaining-about-multiple-copies-of-the-same-types-"],[10,"class","docs-md__h2"],[8],[7,"a",true],[10,"href","#-typescript-is-complaining-about-multiple-copies-of-the-same-types-"],[10,"class","heading-anchor"],[8],[0,"\\"TypeScript is complaining about multiple copies of the same types!\\""],[9],[9],[0,"\\n    "],[7,"p",true],[8],[0,"You may sometimes see TypeScript errors indicating that you have duplicate type definitions for Ember, Ember Data, etc. This is usually the result of an annoying quirk of the way both npm and yarn resolve your dependencies in their lockfiles."],[9],[0,"\\n\\n      "],[7,"h3",true],[10,"id","just-tell-me-how-to-fix-it"],[10,"class","docs-md__h3"],[8],[7,"a",true],[10,"href","#just-tell-me-how-to-fix-it"],[10,"class","heading-anchor"],[8],[0,"Just tell me how to fix it"],[9],[9],[0,"\\n    "],[7,"p",true],[8],[0,"There are two options here, neither of them "],[7,"em",true],[8],[0,"great"],[9],[0,":"],[9],[0,"\\n"],[7,"ul",true],[8],[0,"\\n"],[7,"li",true],[8],[0,"manually edit "],[7,"code",true],[8],[0,"yarn.lock"],[9],[0," or "],[7,"code",true],[8],[0,"package-lock.json"],[9],[0," and merge the conflicting"],[9],[0,"\\n"],[7,"li",true],[8],[0,"add a "],[7,"a",true],[10,"href","https://yarnpkg.com/lang/en/docs/selective-version-resolutions/"],[10,"class","docs-md__a"],[8],[0,"\\"resolutions\\""],[9],[0," key to your "],[7,"code",true],[8],[0,"package.json"],[9],[0," with the version you want to install of the types you\'re installing:"],[9],[0,"\\n"],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedjson"],[8],[0,"{\\n  "],[7,"span",true],[10,"class","hljs-attr"],[8],[0,"\\"resolutions\\""],[9],[0,": {\\n    "],[7,"span",true],[10,"class","hljs-attr"],[8],[0,"\\"**/@types/ember\\""],[9],[0,": "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\\"2.8.15\\""],[9],[0,"\\n  }\\n}"],[9],[9],[0,"\\n\\n      "],[7,"h3",true],[10,"id","why-is-this-happening-"],[10,"class","docs-md__h3"],[8],[7,"a",true],[10,"href","#why-is-this-happening-"],[10,"class","heading-anchor"],[8],[0,"Why is this happening?"],[9],[9],[0,"\\n    "],[7,"p",true],[8],[0,"If you\'re using another package which includes these types, and then you trigger an upgrade for your own copy of the type definitions, npm and yarn will both try to preserve the existing installation and simply add a new one for your updated version. In most cases, this is sane behavior, because it prevents transitive dependency breakage hell. However, in the "],[7,"em",true],[8],[0,"specific"],[9],[0," case of type definitions, it causes TypeScript to get confused."],[9],[9]],"hasEval":false}',meta:{moduleName:"dummy/templates/docs/ts-guide/using-ts-effectively.hbs"}})
e.default=t}),define("dummy/templates/docs/ts-guide/with-addons",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"JIAaB+2O",block:'{"symbols":[],"statements":[[7,"div",true],[10,"class","docs-md"],[8],[7,"h1",true],[10,"id","building-addons-in-typescript"],[10,"class","docs-md__h1"],[8],[0,"Building Addons in TypeScript"],[9],[0,"\\n    "],[7,"p",true],[8],[0,"Building addons in TypeScript offers many of the same benefits as building apps that way: it puts an extra tool at your disposal to help document your code and ensure its correctness. For addons, though, there\'s one additional bonus: publishing type information for your addons enables autocomplete and inline documentation for your consumers, even if they\'re not using TypeScript themselves."],[9],[0,"\\n\\n      "],[7,"h2",true],[10,"id","key-differences-from-apps"],[10,"class","docs-md__h2"],[8],[7,"a",true],[10,"href","#key-differences-from-apps"],[10,"class","heading-anchor"],[8],[0,"Key Differences from Apps"],[9],[9],[0,"\\n    "],[7,"p",true],[8],[0,"To process "],[7,"code",true],[8],[0,".ts"],[9],[0," files, "],[7,"code",true],[8],[0,"ember-cli-typescript"],[9],[0," "],[7,"a",true],[10,"href","https://devblogs.microsoft.com/typescript/typescript-and-babel-7/"],[10,"class","docs-md__a"],[8],[0,"registers a set of Babel plugins"],[9],[0," so that Babel knows how to strip away TypeScript-specific syntax. This means that "],[7,"code",true],[8],[0,"ember-cli-typescript"],[9],[0," operates according to the same set of rules as other preprocessors when used by other addons."],[9],[0,"\\n"],[7,"ul",true],[8],[0,"\\n"],[7,"li",true],[8],[0,"Like other addons that preprocess source files, "],[7,"strong",true],[8],[7,"code",true],[8],[0,"ember-cli-typescript"],[9],[0," must be in your addon\'s "],[7,"code",true],[8],[0,"dependencies"],[9],[0,", not "],[7,"code",true],[8],[0,"devDependencies"],[9],[9],[0,"."],[9],[0,"\\n"],[7,"li",true],[8],[0,"Because addons have no control over how files in "],[7,"code",true],[8],[0,"app/"],[9],[0," are transpiled, "],[7,"strong",true],[8],[0,"you cannot have "],[7,"code",true],[8],[0,".ts"],[9],[0," files in your addon\'s "],[7,"code",true],[8],[0,"app/"],[9],[0," folder"],[9],[0,"."],[9],[0,"\\n"],[9],[0,"\\n\\n      "],[7,"h2",true],[10,"id","publishing"],[10,"class","docs-md__h2"],[8],[7,"a",true],[10,"href","#publishing"],[10,"class","heading-anchor"],[8],[0,"Publishing"],[9],[9],[0,"\\n    "],[7,"p",true],[8],[0,"When you publish an addon written in TypeScript, the "],[7,"code",true],[8],[0,".ts"],[9],[0," files will be consumed and transpiled by Babel as part of building the host application the same way "],[7,"code",true],[8],[0,".js"],[9],[0," files are, in order to meet the requirements of the application\'s "],[7,"code",true],[8],[0,"config/targets.js"],[9],[0,". This means that no special steps are required for your source code to be consumed by users of your addon."],[9],[0,"\\n"],[7,"p",true],[8],[0,"Even though you publish the source "],[7,"code",true],[8],[0,".ts"],[9],[0," files, though, by default you consumers who also use TypeScript won\'t be able to benefit from those types, because the TS compiler isn\'t aware of how "],[7,"code",true],[8],[0,"ember-cli"],[9],[0," resolves import paths for addon files. For instance, if you write "],[7,"code",true],[8],[0,"import { foo } from \'my-addon/bar\';"],[9],[0,", the typechecker has no way to know that the actual file on disk for that import path is at "],[7,"code",true],[8],[0,"my-addon/addon/bar.ts"],[9],[0,"."],[9],[0,"\\n"],[7,"p",true],[8],[0,"In order for your addon\'s users to benefit from type information from your addon, you need to put "],[7,"code",true],[8],[0,".d.ts"],[9],[0," "],[7,"em",true],[8],[0,"declaration files"],[9],[0," at the location on disk where the compiler expects to find them. This addon provides two commands to help with that: "],[7,"code",true],[8],[0,"ember ts:precompile"],[9],[0," and "],[7,"code",true],[8],[0,"ember ts:clean"],[9],[0,". The default "],[7,"code",true],[8],[0,"ember-cli-typescript"],[9],[0," blueprint will configure your "],[7,"code",true],[8],[0,"package.json"],[9],[0," to run these commands in the "],[7,"code",true],[8],[0,"prepublishOnly"],[9],[0," and "],[7,"code",true],[8],[0,"postpublish"],[9],[0," phases respectively, but you can also run them by hand to verify that the output looks as you expect."],[9],[0,"\\n"],[7,"p",true],[8],[0,"The "],[7,"code",true],[8],[0,"ts:precompile"],[9],[0," command will populate the overall structure of your package with "],[7,"code",true],[8],[0,".d.ts"],[9],[0," files laid out to match their import paths. For example, "],[7,"code",true],[8],[0,"addon/index.ts"],[9],[0," would produce an "],[7,"code",true],[8],[0,"index.d.ts"],[9],[0," file in the root of your package."],[9],[0,"\\n"],[7,"p",true],[8],[0,"The "],[7,"code",true],[8],[0,"ts:clean"],[9],[0," command will remove the generated "],[7,"code",true],[8],[0,".d.ts"],[9],[0," files, leaving your working directory back in a pristine state."],[9],[0,"\\n"],[7,"p",true],[8],[0,"The TypeScript compiler has very particular rules when generating declaration files to avoid letting private types leak out unintentionally. You may find it useful to run "],[7,"code",true],[8],[0,"ember ts:precompile"],[9],[0," yourself as you\'re getting a feel for these rules to ensure everything will go smoothly when you publish."],[9],[0,"\\n\\n      "],[7,"h2",true],[10,"id","linking-addons"],[10,"class","docs-md__h2"],[8],[7,"a",true],[10,"href","#linking-addons"],[10,"class","heading-anchor"],[8],[0,"Linking Addons"],[9],[9],[0,"\\n    "],[7,"p",true],[8],[0,"Often when developing an addon, it can be useful to run that addon in the context of some other host app so you can make sure it will integrate the way you expect, e.g. using "],[7,"a",true],[10,"href","https://yarnpkg.com/en/docs/cli/link#search"],[10,"class","docs-md__a"],[8],[7,"code",true],[8],[0,"yarn link"],[9],[9],[0," or "],[7,"a",true],[10,"href","https://docs.npmjs.com/cli/link"],[10,"class","docs-md__a"],[8],[7,"code",true],[8],[0,"npm link"],[9],[9],[0,"."],[9],[0,"\\n"],[7,"p",true],[8],[0,"When you do this for a TypeScript addon, the source files will be picked up in the host app build and everything will execute at runtime as you\'d expect. If the host app is also using TypeScript, though, it won\'t be able to resolve imports from your addon by default, for the reasons outlined above in the Publishing section."],[9],[0,"\\n"],[7,"p",true],[8],[0,"You could run "],[7,"code",true],[8],[0,"ember ts:precompile"],[9],[0," in your addon any time you change a file, but for development a simpler option is to temporarily update the "],[7,"code",true],[8],[0,"paths"],[9],[0," configuration in the host application so that it knows how to resolve types from your linked addon."],[9],[0,"\\n"],[7,"p",true],[8],[0,"Add entries for "],[7,"code",true],[8],[0,"<addon-name>"],[9],[0," and "],[7,"code",true],[8],[0,"<addon-name>/*"],[9],[0," in your "],[7,"code",true],[8],[0,"tsconfig.json"],[9],[0," like so:"],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedjs"],[8],[0,"compilerOptions: {\\n  "],[7,"span",true],[10,"class","hljs-comment"],[8],[0,"// ...other options"],[9],[0,"\\n  "],[7,"span",true],[10,"class","hljs-attr"],[8],[0,"paths"],[9],[0,": {\\n    "],[7,"span",true],[10,"class","hljs-comment"],[8],[0,"// ...other paths, e.g. for your app/ and tests/ trees"],[9],[0,"\\n    "],[7,"span",true],[10,"class","hljs-comment"],[8],[0,"// resolve: import x from \'my-addon\';"],[9],[0,"\\n    "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\\"my-addon\\""],[9],[0,": [\\n      "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\\"node_modules/my-addon/addon\\""],[9],[0,"\\n    ],\\n    "],[7,"span",true],[10,"class","hljs-comment"],[8],[0,"// resolve: import y from \'my-addon/utils/y\';"],[9],[0,"\\n    "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\\"my-addon/*\\""],[9],[0,": [\\n      "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\\"node_modules/my-addon/addon/*\\""],[9],[0,"\\n    ]\\n  }\\n}"],[9],[9],[0,"\\n\\n      "],[7,"h2",true],[10,"id","in-repo-addons"],[10,"class","docs-md__h2"],[8],[7,"a",true],[10,"href","#in-repo-addons"],[10,"class","heading-anchor"],[8],[0,"In-Repo Addons"],[9],[9],[0,"\\n    "],[7,"p",true],[8],[7,"a",true],[10,"href","https://ember-cli.com/extending/#detailed-list-of-blueprints-and-their-use"],[10,"class","docs-md__a"],[8],[0,"In-repo addons"],[9],[0," work in much the same way as linked ones. Their "],[7,"code",true],[8],[0,".ts"],[9],[0," files are managed automatically by "],[7,"code",true],[8],[0,"ember-cli-typescript"],[9],[0," in their "],[7,"code",true],[8],[0,"dependencies"],[9],[0,", and you can ensure imports resolve correctly from the host by adding entries in "],[7,"code",true],[8],[0,"paths"],[9],[0," in the base "],[7,"code",true],[8],[0,"tsconfig.json"],[9],[0," file."],[9],[0,"\\n"],[7,"p",true],[8],[0,"Note that the "],[7,"code",true],[8],[0,"in-repo-addon"],[9],[0," blueprint should automatically add these entries if you have "],[7,"code",true],[8],[0,"ember-cli-typescript-blueprints"],[9],[0," installed when you run it."],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedjs"],[8],[0,"compilerOptions: {\\n  "],[7,"span",true],[10,"class","hljs-comment"],[8],[0,"// ...other options"],[9],[0,"\\n  "],[7,"span",true],[10,"class","hljs-attr"],[8],[0,"paths"],[9],[0,": {\\n    "],[7,"span",true],[10,"class","hljs-comment"],[8],[0,"// ...other paths, e.g. for your tests/ tree"],[9],[0,"\\n    "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\\"my-app\\""],[9],[0,": [\\n      "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\\"app/*\\""],[9],[0,",\\n      "],[7,"span",true],[10,"class","hljs-comment"],[8],[0,"// add addon app directory that will be merged with the host application"],[9],[0,"\\n      "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\\"lib/my-addon/app/*\\""],[9],[0,"\\n    ],\\n    "],[7,"span",true],[10,"class","hljs-comment"],[8],[0,"// resolve: import x from \'my-addon\';"],[9],[0,"\\n    "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\\"my-addon\\""],[9],[0,": [\\n      "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\\"lib/my-addon/addon\\""],[9],[0,"\\n    ],\\n    "],[7,"span",true],[10,"class","hljs-comment"],[8],[0,"// resolve: import y from \'my-addon/utils/y\';"],[9],[0,"\\n    "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\\"my-addon/*\\""],[9],[0,": [\\n      "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\\"lib/my-addon/addon/*\\""],[9],[0,"\\n    ]\\n  }\\n}"],[9],[9],[0,"\\n"],[7,"p",true],[8],[0,"One difference as compared to regular published addons: you know whether or not the host app is using "],[7,"code",true],[8],[0,"ember-cli-typescript"],[9],[0,", and if it is, you can safely put "],[7,"code",true],[8],[0,".ts"],[9],[0," files in an in-repo addon\'s "],[7,"code",true],[8],[0,"app/"],[9],[0," folder."],[9],[9]],"hasEval":false}',meta:{moduleName:"dummy/templates/docs/ts-guide/with-addons.hbs"}})
e.default=t}),define("dummy/templates/docs/type-defs/package-names",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"KFKKTQIV",block:'{"symbols":[],"statements":[[7,"div",true],[10,"class","docs-md"],[8],[7,"h1",true],[10,"id","understanding-the-package-names"],[10,"class","docs-md__h1"],[8],[0,"Understanding the Package Names"],[9],[0,"\\n    "],[7,"p",true],[8],[0,"You may be wondering why the packages added to your "],[7,"code",true],[8],[0,"package.json"],[9],[0," and described in "],[7,"a",true],[10,"href","../../docs#other-packages-this-addon-installs"],[10,"class","docs-md__a"],[8],[7,"strong",true],[8],[0,"Installation: Other packages this addon installs"],[9],[9],[0," are named things like "],[7,"code",true],[8],[0,"@types/ember__object"],[9],[0," instead of something like "],[7,"code",true],[8],[0,"@types/@ember/object"],[9],[0,". This is a conventional name used to allow both the compiler and the "],[7,"a",true],[10,"href","https://github.com/DefinitelyTyped/DefinitelyTyped"],[10,"class","docs-md__a"],[8],[0,"DefinitelyTyped"],[9],[0," publishing infrastructure ("],[7,"a",true],[10,"href","https://github.com/Microsoft/types-publisher"],[10,"class","docs-md__a"],[8],[0,"types-publisher"],[9],[0,") to handle scoped packages, documented under "],[7,"a",true],[10,"href","https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master#what-about-scoped-packages"],[10,"class","docs-md__a"],[8],[7,"b",true],[8],[0,"What about scoped packages?"],[9],[9],[0," in "],[7,"a",true],[10,"href","https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master"],[10,"class","docs-md__a"],[8],[0,"the DefinitelyTyped README"],[9],[0,"."],[9],[0,"\\n"],[7,"p",true],[8],[0,"See also:"],[9],[0,"\\n"],[7,"ul",true],[8],[0,"\\n"],[7,"li",true],[8],[7,"a",true],[10,"href","https://github.com/Microsoft/types-publisher/issues/155"],[10,"class","docs-md__a"],[8],[0,"Microsoft/types-publisher#155"],[9],[9],[0,"\\n"],[7,"li",true],[8],[7,"a",true],[10,"href","https://github.com/Microsoft/TypeScript/issues/14819"],[10,"class","docs-md__a"],[8],[0,"Microsoft/Typescript#14819"],[9],[9],[0,"\\n"],[9],[9]],"hasEval":false}',meta:{moduleName:"dummy/templates/docs/type-defs/package-names.hbs"}})
e.default=t}),define("dummy/templates/docs/upgrade-notes",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"/oxB269i",block:'{"symbols":[],"statements":[[7,"div",true],[10,"class","docs-md"],[8],[7,"h1",true],[10,"id","upgrading-from-1-x"],[10,"class","docs-md__h1"],[8],[0,"Upgrading from 1.x"],[9],[0,"\\n    "],[7,"p",true],[8],[0,"There are a number of important changes between ember-cli-typescript v1 and v2, which mean the upgrade process is "],[7,"em",true],[8],[0,"straightforward"],[9],[0," but "],[7,"em",true],[8],[0,"specific"],[9],[0,":"],[9],[0,"\\n"],[7,"ol",true],[8],[0,"\\n"],[7,"li",true],[8],[0,"Update ember-cli-babel. Fix any problems introduced during the upgrade."],[9],[0,"\\n"],[7,"li",true],[8],[0,"Update ember-decorators. Fix any problems introduced during the upgrade."],[9],[0,"\\n"],[7,"li",true],[8],[0,"Update ember-cli-typescript. Follow the detailed upgrade guide below to fix discrepancies between Babel and TypeScript\'s compiled output."],[9],[0,"\\n"],[9],[0,"\\n"],[7,"p",true],[8],[0,"If you deviate from this order, you are likely to have a "],[7,"em",true],[8],[0,"much"],[9],[0," more difficult time upgrading!"],[9],[0,"\\n\\n      "],[7,"h2",true],[10,"id","update-ember-cli-babel"],[10,"class","docs-md__h2"],[8],[7,"a",true],[10,"href","#update-ember-cli-babel"],[10,"class","heading-anchor"],[8],[0,"Update ember-cli-babel"],[9],[9],[0,"\\n    "],[7,"p",true],[8],[0,"ember-cli-typescript "],[7,"strong",true],[8],[0,"requires"],[9],[0," ember-cli-babel at version 7.1.0 or above, which requires ember-cli 2.13 or above. It also "],[7,"strong",true],[8],[0,"requires"],[9],[0," @babel/core 7.2.0 or higher."],[9],[0,"\\n"],[7,"p",true],[8],[0,"The recommended approach here is to deduplicate existing installations of the dependency, remove and reinstall ember-cli-babel to make sure that all its transitive dependencies are updated to the latest possible, and then to deduplicate "],[7,"em",true],[8],[0,"again"],[9],[0,"."],[9],[0,"\\n"],[7,"p",true],[8],[0,"If using yarn:"],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedsh"],[8],[0,"npx yarn-deduplicate\\nyarn remove ember-cli-babel\\nyarn add --dev ember-cli-babel\\nnpx yarn-deduplicate"],[9],[9],[0,"\\n"],[7,"p",true],[8],[0,"If using npm:"],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedsh"],[8],[0,"npm dedupe\\nnpm uninstall ember-cli-babel\\nnpm install --save-dev ember-cli-babel\\nnpm dedupe"],[9],[9],[0,"\\n"],[7,"p",true],[8],[0,"Note: If you are also using ember-decorators—and specifically the babel-transform that gets added with it—you will need update @ember-decorators/babel-transforms as well (anything over 3.1.0 should work):"],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedsh"],[8],[0,"ember install ember-decorators@^3.1.0 @ember-decorators/babel-transforms@^3.1.0"],[9],[9],[0,"\\n\\n      "],[7,"h2",true],[10,"id","update-ember-decorators"],[10,"class","docs-md__h2"],[8],[7,"a",true],[10,"href","#update-ember-decorators"],[10,"class","heading-anchor"],[8],[0,"Update ember-decorators"],[9],[9],[0,"\\n    "],[7,"p",true],[8],[0,"Follow the same process of deduplication, reinstallation, and re-deduplication as described for ember-cli-babel above. This will get you the latest version of ember-decorators and, importantly, its @ember-decorators/babel-transforms dependency."],[9],[0,"\\n\\n      "],[7,"h2",true],[10,"id","update-ember-cli-typescript"],[10,"class","docs-md__h2"],[8],[7,"a",true],[10,"href","#update-ember-cli-typescript"],[10,"class","heading-anchor"],[8],[0,"Update ember-cli-typescript"],[9],[9],[0,"\\n    "],[7,"p",true],[8],[0,"Now you can simply "],[7,"code",true],[8],[0,"ember install"],[9],[0," the dependency like normal:"],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedsh"],[8],[0,"ember install ember-cli-typescript@latest"],[9],[9],[0,"\\n"],[7,"p",true],[8],[7,"strong",true],[8],[7,"em",true],[8],[0,"Note:"],[9],[0," To work properly, starting from v2, ember-cli-typescript must be declared as a "],[7,"code",true],[8],[0,"dependency"],[9],[0,", not a "],[7,"code",true],[8],[0,"devDependency"],[9],[0," for addons. With "],[7,"code",true],[8],[0,"ember install"],[9],[0," this migration would be automatically handled for you."],[9],[9],[0,"\\n"],[7,"p",true],[8],[0,"If you choose to make the upgrade manually with yarn or npm, here are the steps you need to follow:"],[9],[0,"\\n"],[7,"ol",true],[8],[0,"\\n"],[7,"li",true],[8],[7,"p",true],[8],[0,"Remove ember-cli-typescript from your "],[7,"code",true],[8],[0,"devDependencies"],[9],[0,"."],[9],[0,"\\n"],[7,"p",true],[8],[0," With yarn:"],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedsh"],[8],[0," yarn remove ember-cli-typescript"],[9],[9],[0,"\\n"],[7,"p",true],[8],[0," With npm:"],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedsh"],[8],[0," npm uninstall ember-cli-typescript"],[9],[9],[0,"\\n"],[9],[0,"\\n"],[7,"li",true],[8],[7,"p",true],[8],[0,"Install the latest of ember-cli-typescript as a "],[7,"code",true],[8],[0,"dependency"],[9],[0,":"],[9],[0,"\\n"],[7,"p",true],[8],[0," With yarn:"],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedsh"],[8],[0," yarn add ember-cli-typescript@latest"],[9],[9],[0,"\\n"],[7,"p",true],[8],[0," With npm:"],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedsh"],[8],[0," npm install --save ember-cli-typescript@latest"],[9],[9],[0,"\\n"],[9],[0,"\\n"],[7,"li",true],[8],[7,"p",true],[8],[0,"Run "],[7,"code",true],[8],[0,"ember generate"],[9],[0,":"],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedsh"],[8],[0," ember generate ember-cli-typescript"],[9],[9],[0,"\\n"],[9],[0,"\\n"],[9],[0,"\\n\\n      "],[7,"h3",true],[10,"id","account-for-addon-build-pipeline-changes"],[10,"class","docs-md__h3"],[8],[7,"a",true],[10,"href","#account-for-addon-build-pipeline-changes"],[10,"class","heading-anchor"],[8],[0,"Account for addon build pipeline changes"],[9],[9],[0,"\\n    "],[7,"p",true],[8],[0,"Since we now integrate in a more traditional way into Ember CLI\'s build pipeline, there are two changes required for addons using TypeScript."],[9],[0,"\\n"],[7,"ul",true],[8],[0,"\\n"],[7,"li",true],[8],[7,"p",true],[8],[0,"Addons can no longer use "],[7,"code",true],[8],[0,".ts"],[9],[0," in "],[7,"code",true],[8],[0,"app"],[9],[0,", because an addon\'s "],[7,"code",true],[8],[0,"app"],[9],[0," directory gets merged with and uses the "],[7,"em",true],[8],[0,"host\'s"],[9],[0," (i.e. the other addon or app\'s) preprocessors, and we cannot guarantee the host has TS support. Note that "],[7,"code",true],[8],[0,".ts"],[9],[0," will continue to work for in-repo addons because the app build works with the host\'s (i.e. the app\'s, not the addon\'s) preprocessors."],[9],[0,"\\n"],[9],[0,"\\n"],[7,"li",true],[8],[7,"p",true],[8],[0,"Similarly, apps must use "],[7,"code",true],[8],[0,".js"],[9],[0," to override addon defaults in "],[7,"code",true],[8],[0,"app"],[9],[0,", since the different file extension means apps no long consistently \\"win\\" over addon versions (a limitation of how Babel + app merging interact)."],[9],[0,"\\n"],[9],[0,"\\n"],[9],[0,"\\n\\n      "],[7,"h3",true],[10,"id","account-for-ts-babel-issues"],[10,"class","docs-md__h3"],[8],[7,"a",true],[10,"href","#account-for-ts-babel-issues"],[10,"class","heading-anchor"],[8],[0,"Account for TS → Babel issues"],[9],[9],[0,"\\n    "],[7,"p",true],[8],[0,"ember-cli-typescript v2 uses Babel to compile your code, and the TypeScript compiler only to "],[7,"em",true],[8],[0,"check"],[9],[0," your code. This makes for much faster builds, and eliminates the differences between Babel and TypeScript in the build output that could cause problems in v1. However, because of those differences, you’ll need to make a few changes in the process of upgrading."],[9],[0,"\\n"],[7,"p",true],[8],[0,"Any place where a type annotation overrides a "],[7,"em",true],[8],[0,"getter"],[9],[9],[0,"\\n"],[7,"ul",true],[8],[0,"\\n"],[7,"li",true],[8],[7,"p",true],[8],[0,"Fields like "],[7,"code",true],[8],[0,"element"],[9],[0,", "],[7,"code",true],[8],[0,"disabled"],[9],[0,", etc. as annotated defined on a subclass of "],[7,"code",true],[8],[0,"Component"],[9],[0," and (correctly) not initialized to anything, e.g.:"],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedts"],[8],[0,"  "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"import"],[9],[0," Component "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"from"],[9],[0," "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\'@ember/component\'"],[9],[0,";\\n\\n  "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"export"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"default"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"class"],[9],[0," Person "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"extends"],[9],[0," Component {\\n    element!: HTMLImageElement;\\n  }"],[9],[9],[0,"\\n"],[7,"p",true],[8],[0,"  This breaks because "],[7,"code",true],[8],[0,"element"],[9],[0," is a getter on "],[7,"code",true],[8],[0,"Component"],[9],[0,". This declaration then shadows the getter declaration on the base class and stomps it to "],[7,"code",true],[8],[0,"undefined"],[9],[0," (effectively "],[7,"code",true],[8],[0,"Object.defineProperty(this, \'element\', void 0)"],[9],[0,"."],[9],[0,"\\n"],[7,"p",true],[8],[0,"  Two solutions:"],[9],[0,"\\n"],[7,"ol",true],[8],[0,"\\n"],[7,"li",true],[8],[7,"p",true],[8],[0,"Annotate locally (slightly more annoying, but less likely to troll you):"],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedts"],[8],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"class"],[9],[0," Image "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"extends"],[9],[0," Component {\\n   useElement() {\\n     "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"let"],[9],[0," element = "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"this"],[9],[0,".element "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"as"],[9],[0," HTMLImageElement;\\n     "],[7,"span",true],[10,"class","hljs-built_in"],[8],[0,"console"],[9],[0,".log(element.src);\\n   }\\n }"],[9],[9],[0,"\\n"],[9],[0,"\\n"],[7,"li",true],[8],[7,"p",true],[8],[0,"Use a local getter:"],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedts"],[8],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"class"],[9],[0," Image "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"extends"],[9],[0," Component {\\n   "],[7,"span",true],[10,"class","hljs-comment"],[8],[0,"// We do this because..."],[9],[0,"\\n   "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"get"],[9],[0," _element(): HTMLImageElement {\\n     "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"return"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"this"],[9],[0,".element "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"as"],[9],[0," HTMLImageElement;\\n   }\\n\\n   useElement() {\\n     "],[7,"span",true],[10,"class","hljs-built_in"],[8],[0,"console"],[9],[0,".log("],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"this"],[9],[0,"._element.src);\\n   }\\n }"],[9],[9],[0,"\\n"],[9],[0,"\\n"],[9],[0,"\\n"],[9],[0,"\\n"],[9],[0,"\\n"],[7,"ul",true],[8],[0,"\\n"],[7,"li",true],[8],[7,"p",true],[8],[7,"code",true],[8],[0,"const enum"],[9],[0," is not supported at all. You will need to replace all uses of "],[7,"code",true],[8],[0,"const enum"],[9],[0," with simply "],[7,"code",true],[8],[0,"enum"],[9],[0," or constants."],[9],[0,"\\n"],[9],[0,"\\n"],[7,"li",true],[8],[7,"p",true],[8],[0,"Using ES5 getters or settings with "],[7,"code",true],[8],[0,"this"],[9],[0," type annotations is not supported through at least Babel 7.3. However, they should also be unnecessary with ES6 classes, so you can simply "],[7,"em",true],[8],[0,"remove"],[9],[0," the "],[7,"code",true],[8],[0,"this"],[9],[0," type annotation."],[9],[0,"\\n"],[9],[0,"\\n"],[7,"li",true],[8],[7,"p",true],[8],[0,"Trailing commas after rest function parameters ("],[7,"code",true],[8],[0,"function foo(...bar[],) {}"],[9],[0,") are disallowed by the ECMAScript spec, so Babel also disallows them."],[9],[0,"\\n"],[9],[0,"\\n"],[7,"li",true],[8],[7,"p",true],[8],[0,"Re-exports of types have to be disambiguated to be "],[7,"em",true],[8],[0,"types"],[9],[0,", rather than values. Neither of these will work:"],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedts"],[8],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"export"],[9],[0," { FooType } "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"from"],[9],[0," "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\'foo\'"],[9],[0,";"],[9],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedts"],[8],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"import"],[9],[0," { FooType } "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"from"],[9],[0," "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\'foo\'"],[9],[0,";\\n"],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"export"],[9],[0," { FooType };"],[9],[9],[0,"\\n"],[7,"p",true],[8],[0,"In both cases, Babel attempts to emit a "],[7,"em",true],[8],[0,"value"],[9],[0," export, not just a "],[7,"em",true],[8],[0,"type"],[9],[0," export, and fails because there is no actual value to emit. You can do this instead as a workaround:"],[9],[0,"\\n"],[7,"pre",true],[10,"class","docs-md__code"],[8],[7,"code",true],[10,"class","undefinedts"],[8],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"import"],[9],[0," * "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"as"],[9],[0," Foo "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"from"],[9],[0," "],[7,"span",true],[10,"class","hljs-string"],[8],[0,"\'foo\'"],[9],[0,";\\n"],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"export"],[9],[0," "],[7,"span",true],[10,"class","hljs-keyword"],[8],[0,"type"],[9],[0," FooType = Foo.FooType;"],[9],[9],[0,"\\n"],[9],[0,"\\n"],[9],[9]],"hasEval":false}',meta:{moduleName:"dummy/templates/docs/upgrade-notes.hbs"}})
e.default=t}),define("dummy/templates/index",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"ntF1klgl",block:'{"symbols":[],"statements":[[5,"docs-header",[],[["@prefix","@name"],["Ember CLI","TypeScript"]]],[0,"\\n\\n"],[5,"docs-hero",[],[["@prefix","@heading","@byline"],["Ember CLI","TypeScript","Use TypeScript in your Ember 2.x and 3.x apps!"]]],[0,"\\n\\n"],[7,"div",true],[10,"class","docs-container docs-md"],[8],[0,"\\n  "],[7,"section",true],[10,"class","docs-max-w-md docs-mx-auto docs-pb-8"],[8],[0,"\\n    "],[1,[22,"index-content"],false],[0,"\\n\\n    "],[7,"div",true],[10,"class","docs-my-16 docs-text-right"],[8],[0,"\\n"],[4,"link-to",null,[["class","route"],["docs-bg-grey-darkest hover:docs-bg-black docs-text-white docs-py-2 docs-px-4 docs-no-underline docs-rounded","docs"]],{"statements":[[0,"        Read the docs →\\n"]],"parameters":[]},null],[0,"    "],[9],[0,"\\n  "],[9],[0,"\\n"],[9],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"dummy/templates/index.hbs"}})
e.default=t})
define("dummy/transitions",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(){this.transition(this.hasClass("modal-fade-and-drop"),this.use("fadeAndDrop")),this.transition(this.hasClass("modal-fade"),this.use("fade",{duration:150}))}}),define("dummy/transitions/cross-fade",["exports","liquid-fire/transitions/cross-fade"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/transitions/default",["exports","liquid-fire/transitions/default"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/transitions/explode",["exports","liquid-fire/transitions/explode"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/transitions/fade-and-drop",["exports","ember-cli-addon-docs/transitions/fade-and-drop"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/transitions/fade",["exports","liquid-fire/transitions/fade"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/transitions/flex-grow",["exports","liquid-fire/transitions/flex-grow"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/transitions/fly-to",["exports","liquid-fire/transitions/fly-to"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/transitions/move-over",["exports","liquid-fire/transitions/move-over"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/transitions/scale",["exports","liquid-fire/transitions/scale"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/transitions/scroll-then",["exports","liquid-fire/transitions/scroll-then"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/transitions/to-down",["exports","liquid-fire/transitions/to-down"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/transitions/to-left",["exports","liquid-fire/transitions/to-left"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/transitions/to-right",["exports","liquid-fire/transitions/to-right"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/transitions/to-up",["exports","liquid-fire/transitions/to-up"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/transitions/wait",["exports","liquid-fire/transitions/wait"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/utils/get-cmd-key",["exports","ember-keyboard/utils/get-cmd-key"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/utils/listener-name",["exports","ember-keyboard/utils/listener-name"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/utils/titleize",["exports","ember-cli-string-helpers/utils/titleize"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/config/environment",[],function(){try{var e="dummy/config/environment",t=document.querySelector('meta[name="'+e+'"]').getAttribute("content"),r={default:JSON.parse(decodeURIComponent(t))}
return Object.defineProperty(r,"__esModule",{value:!0}),r}catch(n){throw new Error('Could not read config from meta tag with name "'+e+'".')}}),runningTests||require("dummy/app").default.create({name:"ember-cli-typescript",version:"3.1.1+1a886e91"})
